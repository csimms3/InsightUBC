{"/Users/justin/project_team052/src/controller/IInsightFacade.ts":{"path":"/Users/justin/project_team052/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":45,"6":45,"7":1,"8":3,"9":3,"10":1,"11":3,"12":3,"13":1},"f":{"0":1,"1":45,"2":3,"3":3},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/controller/IInsightFacade.ts","sources":["/Users/justin/project_team052/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"57746281e8cfec0524471659c357876d1a0d68be","contentHash":"11de37d625107051df306077c837a586e30ed71f6c01032e860711bdaaa5b9f4"},"/Users/justin/project_team052/src/controller/InsightFacade.ts":{"path":"/Users/justin/project_team052/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":26},"end":{"line":7,"column":61}},"5":{"start":{"line":8,"column":26},"end":{"line":8,"column":62}},"6":{"start":{"line":9,"column":27},"end":{"line":9,"column":63}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"8":{"start":{"line":11,"column":27},"end":{"line":11,"column":63}},"9":{"start":{"line":12,"column":29},"end":{"line":12,"column":67}},"10":{"start":{"line":13,"column":23},"end":{"line":13,"column":56}},"11":{"start":{"line":14,"column":23},"end":{"line":14,"column":55}},"12":{"start":{"line":15,"column":19},"end":{"line":15,"column":55}},"13":{"start":{"line":17,"column":23},"end":{"line":17,"column":25}},"14":{"start":{"line":18,"column":20},"end":{"line":18,"column":22}},"15":{"start":{"line":19,"column":18},"end":{"line":19,"column":22}},"16":{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},"17":{"start":{"line":22,"column":12},"end":{"line":22,"column":93}},"18":{"start":{"line":24,"column":13},"end":{"line":26,"column":9}},"19":{"start":{"line":25,"column":12},"end":{"line":25,"column":94}},"20":{"start":{"line":27,"column":30},"end":{"line":27,"column":55}},"21":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"22":{"start":{"line":28,"column":43},"end":{"line":28,"column":53}},"23":{"start":{"line":29,"column":12},"end":{"line":29,"column":119}},"24":{"start":{"line":31,"column":8},"end":{"line":39,"column":9}},"25":{"start":{"line":32,"column":12},"end":{"line":32,"column":55}},"26":{"start":{"line":34,"column":13},"end":{"line":39,"column":9}},"27":{"start":{"line":35,"column":12},"end":{"line":35,"column":52}},"28":{"start":{"line":38,"column":12},"end":{"line":38,"column":91}},"29":{"start":{"line":40,"column":8},"end":{"line":40,"column":42}},"30":{"start":{"line":43,"column":8},"end":{"line":52,"column":9}},"31":{"start":{"line":44,"column":29},"end":{"line":44,"column":90}},"32":{"start":{"line":45,"column":25},"end":{"line":45,"column":72}},"33":{"start":{"line":46,"column":36},"end":{"line":46,"column":142}},"34":{"start":{"line":47,"column":12},"end":{"line":47,"column":56}},"35":{"start":{"line":48,"column":12},"end":{"line":48,"column":58}},"36":{"start":{"line":51,"column":12},"end":{"line":51,"column":96}},"37":{"start":{"line":55,"column":8},"end":{"line":63,"column":9}},"38":{"start":{"line":56,"column":26},"end":{"line":56,"column":81}},"39":{"start":{"line":57,"column":33},"end":{"line":57,"column":132}},"40":{"start":{"line":58,"column":12},"end":{"line":58,"column":50}},"41":{"start":{"line":59,"column":12},"end":{"line":59,"column":55}},"42":{"start":{"line":62,"column":12},"end":{"line":62,"column":93}},"43":{"start":{"line":66,"column":28},"end":{"line":66,"column":53}},"44":{"start":{"line":67,"column":8},"end":{"line":67,"column":56}},"45":{"start":{"line":67,"column":44},"end":{"line":67,"column":54}},"46":{"start":{"line":70,"column":8},"end":{"line":75,"column":9}},"47":{"start":{"line":71,"column":12},"end":{"line":71,"column":93}},"48":{"start":{"line":73,"column":13},"end":{"line":75,"column":9}},"49":{"start":{"line":74,"column":12},"end":{"line":74,"column":94}},"50":{"start":{"line":76,"column":20},"end":{"line":76,"column":28}},"51":{"start":{"line":77,"column":8},"end":{"line":77,"column":48}},"52":{"start":{"line":78,"column":29},"end":{"line":78,"column":66}},"53":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"54":{"start":{"line":79,"column":47},"end":{"line":79,"column":79}},"55":{"start":{"line":80,"column":12},"end":{"line":80,"column":89}},"56":{"start":{"line":82,"column":8},"end":{"line":89,"column":9}},"57":{"start":{"line":83,"column":12},"end":{"line":83,"column":97}},"58":{"start":{"line":83,"column":78},"end":{"line":83,"column":95}},"59":{"start":{"line":84,"column":12},"end":{"line":84,"column":91}},"60":{"start":{"line":84,"column":72},"end":{"line":84,"column":89}},"61":{"start":{"line":85,"column":12},"end":{"line":85,"column":45}},"62":{"start":{"line":88,"column":12},"end":{"line":88,"column":88}},"63":{"start":{"line":90,"column":8},"end":{"line":90,"column":18}},"64":{"start":{"line":93,"column":23},"end":{"line":93,"column":28}},"65":{"start":{"line":94,"column":25},"end":{"line":94,"column":30}},"66":{"start":{"line":97,"column":8},"end":{"line":106,"column":9}},"67":{"start":{"line":98,"column":12},"end":{"line":105,"column":13}},"68":{"start":{"line":99,"column":16},"end":{"line":99,"column":32}},"69":{"start":{"line":100,"column":16},"end":{"line":100,"column":40}},"70":{"start":{"line":102,"column":17},"end":{"line":105,"column":13}},"71":{"start":{"line":103,"column":16},"end":{"line":103,"column":34}},"72":{"start":{"line":104,"column":16},"end":{"line":104,"column":42}},"73":{"start":{"line":107,"column":8},"end":{"line":112,"column":9}},"74":{"start":{"line":108,"column":12},"end":{"line":108,"column":84}},"75":{"start":{"line":110,"column":13},"end":{"line":112,"column":9}},"76":{"start":{"line":111,"column":12},"end":{"line":111,"column":86}},"77":{"start":{"line":113,"column":26},"end":{"line":113,"column":76}},"78":{"start":{"line":114,"column":28},"end":{"line":114,"column":72}},"79":{"start":{"line":115,"column":30},"end":{"line":115,"column":103}},"80":{"start":{"line":116,"column":23},"end":{"line":116,"column":102}},"81":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"82":{"start":{"line":118,"column":12},"end":{"line":118,"column":138}},"83":{"start":{"line":120,"column":8},"end":{"line":120,"column":22}},"84":{"start":{"line":123,"column":8},"end":{"line":123,"column":50}},"85":{"start":{"line":124,"column":8},"end":{"line":128,"column":9}},"86":{"start":{"line":125,"column":12},"end":{"line":127,"column":13}},"87":{"start":{"line":126,"column":16},"end":{"line":126,"column":45}},"88":{"start":{"line":129,"column":8},"end":{"line":129,"column":96}},"89":{"start":{"line":132,"column":20},"end":{"line":132,"column":28}},"90":{"start":{"line":133,"column":8},"end":{"line":133,"column":48}},"91":{"start":{"line":134,"column":29},"end":{"line":134,"column":66}},"92":{"start":{"line":135,"column":32},"end":{"line":138,"column":10}},"93":{"start":{"line":136,"column":23},"end":{"line":136,"column":55}},"94":{"start":{"line":137,"column":12},"end":{"line":137,"column":54}},"95":{"start":{"line":139,"column":25},"end":{"line":139,"column":59}},"96":{"start":{"line":140,"column":8},"end":{"line":143,"column":11}},"97":{"start":{"line":141,"column":34},"end":{"line":141,"column":98}},"98":{"start":{"line":142,"column":12},"end":{"line":142,"column":33}},"99":{"start":{"line":146,"column":32},"end":{"line":146,"column":33}},"100":{"start":{"line":147,"column":28},"end":{"line":147,"column":74}},"101":{"start":{"line":148,"column":25},"end":{"line":148,"column":52}},"102":{"start":{"line":149,"column":8},"end":{"line":154,"column":9}},"103":{"start":{"line":150,"column":12},"end":{"line":150,"column":71}},"104":{"start":{"line":153,"column":12},"end":{"line":153,"column":94}},"105":{"start":{"line":157,"column":25},"end":{"line":157,"column":44}},"106":{"start":{"line":158,"column":8},"end":{"line":163,"column":9}},"107":{"start":{"line":159,"column":12},"end":{"line":159,"column":54}},"108":{"start":{"line":162,"column":12},"end":{"line":162,"column":93}},"109":{"start":{"line":166,"column":25},"end":{"line":166,"column":44}},"110":{"start":{"line":167,"column":8},"end":{"line":182,"column":9}},"111":{"start":{"line":168,"column":32},"end":{"line":168,"column":75}},"112":{"start":{"line":169,"column":37},"end":{"line":169,"column":113}},"113":{"start":{"line":170,"column":12},"end":{"line":177,"column":13}},"114":{"start":{"line":171,"column":32},"end":{"line":171,"column":90}},"115":{"start":{"line":172,"column":16},"end":{"line":172,"column":52}},"116":{"start":{"line":174,"column":17},"end":{"line":177,"column":13}},"117":{"start":{"line":175,"column":32},"end":{"line":175,"column":87}},"118":{"start":{"line":176,"column":16},"end":{"line":176,"column":49}},"119":{"start":{"line":178,"column":12},"end":{"line":178,"column":36}},"120":{"start":{"line":181,"column":12},"end":{"line":181,"column":97}},"121":{"start":{"line":185,"column":0},"end":{"line":185,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":40},"end":{"line":41,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":30},"end":{"line":28,"column":31}},"loc":{"start":{"line":28,"column":43},"end":{"line":28,"column":53}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":42},"end":{"line":53,"column":5}},"line":42},"4":{"name":"(anonymous_4)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":39},"end":{"line":64,"column":5}},"line":54},"5":{"name":"(anonymous_5)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":26},"end":{"line":68,"column":5}},"line":65},"6":{"name":"(anonymous_6)","decl":{"start":{"line":67,"column":31},"end":{"line":67,"column":32}},"loc":{"start":{"line":67,"column":44},"end":{"line":67,"column":54}},"line":67},"7":{"name":"(anonymous_7)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":28},"end":{"line":91,"column":5}},"line":69},"8":{"name":"(anonymous_8)","decl":{"start":{"line":79,"column":30},"end":{"line":79,"column":31}},"loc":{"start":{"line":79,"column":47},"end":{"line":79,"column":79}},"line":79},"9":{"name":"(anonymous_9)","decl":{"start":{"line":83,"column":65},"end":{"line":83,"column":66}},"loc":{"start":{"line":83,"column":78},"end":{"line":83,"column":95}},"line":83},"10":{"name":"(anonymous_10)","decl":{"start":{"line":84,"column":59},"end":{"line":84,"column":60}},"loc":{"start":{"line":84,"column":72},"end":{"line":84,"column":89}},"line":84},"11":{"name":"(anonymous_11)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":30},"end":{"line":121,"column":5}},"line":92},"12":{"name":"(anonymous_12)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":44},"end":{"line":130,"column":5}},"line":122},"13":{"name":"(anonymous_13)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":25},"end":{"line":144,"column":5}},"line":131},"14":{"name":"(anonymous_14)","decl":{"start":{"line":135,"column":49},"end":{"line":135,"column":50}},"loc":{"start":{"line":135,"column":72},"end":{"line":138,"column":9}},"line":135},"15":{"name":"(anonymous_15)","decl":{"start":{"line":140,"column":28},"end":{"line":140,"column":29}},"loc":{"start":{"line":140,"column":41},"end":{"line":143,"column":9}},"line":140},"16":{"name":"(anonymous_16)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":37},"end":{"line":155,"column":5}},"line":145},"17":{"name":"(anonymous_17)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":32},"end":{"line":164,"column":5}},"line":156},"18":{"name":"(anonymous_18)","decl":{"start":{"line":165,"column":4},"end":{"line":165,"column":5}},"loc":{"start":{"line":165,"column":34},"end":{"line":183,"column":5}},"line":165}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},{"start":{"line":21,"column":8},"end":{"line":26,"column":9}}],"line":21},"4":{"loc":{"start":{"line":24,"column":13},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":13},"end":{"line":26,"column":9}},{"start":{"line":24,"column":13},"end":{"line":26,"column":9}}],"line":24},"5":{"loc":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},{"start":{"line":28,"column":8},"end":{"line":30,"column":9}}],"line":28},"6":{"loc":{"start":{"line":31,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":39,"column":9}},{"start":{"line":31,"column":8},"end":{"line":39,"column":9}}],"line":31},"7":{"loc":{"start":{"line":34,"column":13},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":13},"end":{"line":39,"column":9}},{"start":{"line":34,"column":13},"end":{"line":39,"column":9}}],"line":34},"8":{"loc":{"start":{"line":70,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":75,"column":9}},{"start":{"line":70,"column":8},"end":{"line":75,"column":9}}],"line":70},"9":{"loc":{"start":{"line":73,"column":13},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":13},"end":{"line":75,"column":9}},{"start":{"line":73,"column":13},"end":{"line":75,"column":9}}],"line":73},"10":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79},"11":{"loc":{"start":{"line":98,"column":12},"end":{"line":105,"column":13}},"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":105,"column":13}},{"start":{"line":98,"column":12},"end":{"line":105,"column":13}}],"line":98},"12":{"loc":{"start":{"line":102,"column":17},"end":{"line":105,"column":13}},"type":"if","locations":[{"start":{"line":102,"column":17},"end":{"line":105,"column":13}},{"start":{"line":102,"column":17},"end":{"line":105,"column":13}}],"line":102},"13":{"loc":{"start":{"line":107,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":112,"column":9}},{"start":{"line":107,"column":8},"end":{"line":112,"column":9}}],"line":107},"14":{"loc":{"start":{"line":110,"column":13},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":13},"end":{"line":112,"column":9}},{"start":{"line":110,"column":13},"end":{"line":112,"column":9}}],"line":110},"15":{"loc":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},{"start":{"line":117,"column":8},"end":{"line":119,"column":9}}],"line":117},"16":{"loc":{"start":{"line":125,"column":12},"end":{"line":127,"column":13}},"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":127,"column":13}},{"start":{"line":125,"column":12},"end":{"line":127,"column":13}}],"line":125},"17":{"loc":{"start":{"line":170,"column":12},"end":{"line":177,"column":13}},"type":"if","locations":[{"start":{"line":170,"column":12},"end":{"line":177,"column":13}},{"start":{"line":170,"column":12},"end":{"line":177,"column":13}}],"line":170},"18":{"loc":{"start":{"line":174,"column":17},"end":{"line":177,"column":13}},"type":"if","locations":[{"start":{"line":174,"column":17},"end":{"line":177,"column":13}},{"start":{"line":174,"column":17},"end":{"line":177,"column":13}}],"line":174}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":30,"14":30,"15":30,"16":31,"17":2,"18":29,"19":2,"20":27,"21":27,"22":3,"23":1,"24":26,"25":25,"26":1,"27":1,"28":0,"29":20,"30":25,"31":25,"32":20,"33":19,"34":19,"35":19,"36":6,"37":1,"38":1,"39":1,"40":1,"41":1,"42":0,"43":20,"44":20,"45":22,"46":8,"47":2,"48":6,"49":1,"50":5,"51":5,"52":5,"53":5,"54":4,"55":3,"56":2,"57":2,"58":4,"59":2,"60":0,"61":2,"62":0,"63":2,"64":42,"65":42,"66":42,"67":79,"68":40,"69":40,"70":39,"71":39,"72":39,"73":42,"74":2,"75":40,"76":2,"77":38,"78":35,"79":35,"80":16,"81":15,"82":3,"83":12,"84":35,"85":35,"86":35,"87":35,"88":0,"89":54,"90":54,"91":54,"92":54,"93":32,"94":32,"95":54,"96":54,"97":32,"98":32,"99":20,"100":20,"101":20,"102":20,"103":20,"104":0,"105":2,"106":2,"107":2,"108":0,"109":67,"110":67,"111":67,"112":67,"113":67,"114":65,"115":65,"116":2,"117":2,"118":2,"119":67,"120":0,"121":1},"f":{"0":1,"1":31,"2":3,"3":25,"4":1,"5":20,"6":22,"7":8,"8":4,"9":4,"10":0,"11":42,"12":35,"13":54,"14":32,"15":32,"16":20,"17":2,"18":67},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[2,29],"4":[2,27],"5":[1,26],"6":[25,1],"7":[1,0],"8":[2,6],"9":[1,5],"10":[3,2],"11":[40,39],"12":[39,0],"13":[2,40],"14":[2,38],"15":[3,12],"16":[35,0],"17":[65,2],"18":[2,0]},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/controller/InsightFacade.ts","sources":["/Users/justin/project_team052/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n\tResultTooLargeError,\n} from \"./IInsightFacade\";\nimport { Base64ZipToJsonSections, jsonToSections } from \"../utils/zipUtilsSection\";\nimport { Section } from \"../models/section\";\nimport { SectionsDataset } from \"../models/sectionsDataset\";\nimport { jsonToRoomsDataset, jsonToSectionsDataset } from \"../utils/persistenceUtils\";\nimport \"../utils/queryEngineUtils\";\nimport { getDatasetId } from \"../utils/queryEngineUtils\";\nimport { handleOptions, handleWhere } from \"../utils/queryParsingEngine\";\nimport { RoomsDataset } from \"../models/roomsDataset\";\nimport { Base64ZipToJsonRooms } from \"../utils/zipUtilsRoom\";\n\nimport fs from \"fs-extra\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\n\nexport default class InsightFacade implements IInsightFacade {\n\tprivate sectionsDatasets: SectionsDataset[] = [];\n\tprivate roomsDatasets: RoomsDataset[] = [];\n\tprivate readonly MAX_QUERIES: number = 5000;\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t//validate that the id is valid and not already in our dataset array\n\t\tif (id.trim().length === 0) {\n\t\t\tthrow new InsightError(\"Dataset Id cannot be only whitespace.\");\n\t\t} else if (id.indexOf(\"_\") > -1) {\n\t\t\tthrow new InsightError(\"Dataset Id cannot contain underscores.\");\n\t\t}\n\n\t\t//check dataset id against dataset .json files\n\t\tconst addedDatasets = await this.listDatasets();\n\t\tif (addedDatasets.map((dataset) => dataset.id).includes(id)) {\n\t\t\tthrow new InsightError(\"Dataset Id is already added, new datasets must have unique Ids.\");\n\t\t}\n\n\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\tawait this.addSectionsDataset(id, content);\n\t\t} else if (kind === InsightDatasetKind.Rooms) {\n\t\t\tawait this.addRoomsDataset(id, content);\n\t\t} else {\n\t\t\tthrow new InsightError(\"Incorrect value for 'kind': \" + kind);\n\t\t}\n\n\t\treturn await this.getDatasetIds();\n\t}\n\n\tprivate async addSectionsDataset(id: string, content: string): Promise<void> {\n\t\ttry {\n\t\t\tconst jsonData = await Base64ZipToJsonSections(content);\n\t\t\tconst data: Section[] = jsonToSections(jsonData);\n\t\t\tconst sectionsDataset = new SectionsDataset(data, id, InsightDatasetKind.Sections, data.length);\n\n\t\t\tthis.sectionsDatasets.push(sectionsDataset);\n\t\t\tawait this.saveDatasetToFile(sectionsDataset);\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Error parsing sections dataset: \" + error);\n\t\t}\n\t}\n\n\tprivate async addRoomsDataset(id: string, content: string): Promise<void> {\n\t\ttry {\n\t\t\tconst rooms = await Base64ZipToJsonRooms(content);\n\t\t\tconst roomsDataset = new RoomsDataset(rooms, id, InsightDatasetKind.Rooms, rooms.length);\n\n\t\t\tthis.roomsDatasets.push(roomsDataset);\n\t\t\tawait this.saveDatasetToFile(roomsDataset);\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Error parsing rooms dataset: \" + error);\n\t\t}\n\t}\n\n\tprivate async getDatasetIds(): Promise<string[]> {\n\t\tconst datasetInfo = await this.listDatasets();\n\t\treturn datasetInfo.map((dataset) => dataset.id);\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\tif (id.trim().length === 0) {\n\t\t\tthrow new InsightError(\"Dataset Id cannot be only whitespace.\");\n\t\t} else if (id.indexOf(\"_\") > -1) {\n\t\t\tthrow new InsightError(\"Dataset Id cannot contain underscores.\");\n\t\t}\n\n\t\tconst dir = \"./data\";\n\t\tawait fs.ensureDir(dir);\n\t\tconst datasetFiles = await fs.readdir(dir);\n\t\tif (!datasetFiles.map((datasetFile: string) => datasetFile.replace(\".json\", \"\")).includes(id)) {\n\t\t\tthrow new NotFoundError(`Dataset with id ${id} not found.`);\n\t\t}\n\n\t\ttry {\n\t\t\tthis.sectionsDatasets = this.sectionsDatasets.filter((dataset) => dataset.id !== id);\n\t\t\tthis.roomsDatasets = this.roomsDatasets.filter((dataset) => dataset.id !== id);\n\t\t\tawait this.deleteDatasetFile(id);\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Error removing dataset: \" + error);\n\t\t}\n\t\treturn id;\n\t}\n\n\t// Takes JSON object representing query in EBNF\n\t// Returns array of section information which match the given query\n\tpublic async performQuery(query: any): Promise<InsightResult[]> {\n\t\t// Note: Super scuffed: does not check for duplicate wheres or options. But also: the reference UI does not check either?\n\t\tlet hasWhere = false;\n\t\tlet hasOptions = false;\n\t\tlet queryWhere;\n\t\tlet queryOptions;\n\t\tfor (const key in query) {\n\t\t\tif (key === \"WHERE\") {\n\t\t\t\thasWhere = true;\n\t\t\t\tqueryWhere = query[key];\n\t\t\t} else if (key === \"OPTIONS\") {\n\t\t\t\thasOptions = true;\n\t\t\t\tqueryOptions = query[key];\n\t\t\t}\n\t\t}\n\t\tif (!hasWhere) {\n\t\t\tthrow new InsightError(\"Invalid Query: Missing WHERE\");\n\t\t} else if (!hasOptions) {\n\t\t\tthrow new InsightError(\"Invalid Query: Missing OPTIONS\");\n\t\t}\n\n\t\t// Get first datasetId to retrieve sections\n\t\tconst datasetId = getDatasetId(queryOptions); // ALSO CHECKS IF COLUMNS EXISTS AND IS NONEMPTY\n\n\t\t// Get all sections from given dataset\n\t\tconst allSections = await this.getSectionsFromDataset(datasetId);\n\n\t\t// Pass query[\"WHERE\"] into handleWhere, as well as all sections from dataset\n\t\t// handleWhere will then return all the valid sections from the query\n\t\tconst validSections = handleWhere(queryWhere, allSections, datasetId);\n\n\t\t// Pass 1st argument of dictionary[\"OPTIONS\"] into handleOptions, as well as validSections\n\t\t// handleOptions will return the array of columns and values for each section\n\t\tconst result = handleOptions(queryOptions, validSections, datasetId);\n\n\t\t// If result.length is > 5000, throw ResultTooLargeError\n\t\tif (result.length > this.MAX_QUERIES) {\n\t\t\tthrow new ResultTooLargeError(\"Result Too Large: Only queries with a maximum of 5000 results are supported\");\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async getSectionsFromDataset(datasetId: string): Promise<any> {\n\t\tawait this.loadDatasetFromFile(datasetId); // will throw error if dataset not found in disk\n\n\t\tfor (const dataset of this.sectionsDatasets) {\n\t\t\tif (dataset.id === datasetId) {\n\t\t\t\treturn dataset.getSections();\n\t\t\t}\n\t\t}\n\n\t\tthrow new InsightError(\"Dataset not found on disk or in memory uh oh\");\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\tconst dir = \"./data\";\n\t\tawait fs.ensureDir(dir);\n\t\tconst datasetFiles = await fs.readdir(dir);\n\t\tconst datasetPromises = datasetFiles.map(async (datasetFile: string) => {\n\t\t\tconst id = datasetFile.replace(\".json\", \"\");\n\t\t\treturn await this.loadDatasetFromFile(id);\n\t\t});\n\n\t\tconst datasets = await Promise.all(datasetPromises);\n\t\treturn datasets.map((dataset) => {\n\t\t\tconst interfaceData: InsightDataset = { id: dataset.id, kind: dataset.kind, numRows: dataset.numRows };\n\t\t\treturn interfaceData;\n\t\t});\n\t}\n\n\tprivate async saveDatasetToFile(dataset: InsightDataset): Promise<void> {\n\t\tconst jsonIndentation = 2;\n\t\tconst jsonDataset = JSON.stringify(dataset, null, jsonIndentation);\n\t\tconst filePath = `./data/${dataset.id}.json`;\n\t\ttry {\n\t\t\tawait fs.outputFile(filePath, jsonDataset);\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Error saving dataset to disk: \" + error);\n\t\t}\n\t}\n\n\tprivate async deleteDatasetFile(id: string): Promise<void> {\n\t\tconst filePath = `./data/${id}.json`;\n\t\ttry {\n\t\t\tawait fs.remove(filePath);\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Error removing dataset file: \" + error);\n\t\t}\n\t}\n\n\tpublic async loadDatasetFromFile(id: string): Promise<InsightDataset> {\n\t\tconst filePath = `./data/${id}.json`;\n\n\t\ttry {\n\t\t\tconst datasetFile = await fs.readJson(filePath);\n\t\t\tconst datasetInterface = { id: datasetFile.id, kind: datasetFile.kind, numRows: datasetFile.numRows };\n\n\t\t\tif (datasetFile.kind === InsightDatasetKind.Sections) {\n\t\t\t\tconst dataset = jsonToSectionsDataset(datasetFile);\n\t\t\t\tthis.sectionsDatasets.push(dataset);\n\t\t\t} else if (datasetFile.kind === InsightDatasetKind.Rooms) {\n\t\t\t\tconst dataset = jsonToRoomsDataset(datasetFile);\n\t\t\t\tthis.roomsDatasets.push(dataset);\n\t\t\t}\n\n\t\t\treturn datasetInterface;\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Error loading dataset from disk: \" + error);\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dfd91bfad8e4f02b0736165a9a78feaf1fd3dd2b","contentHash":"e0bd227a58fd5f6e2bfa43c7c72da47bd5e729c94af1aed2f39bd224fd3fee42"},"/Users/justin/project_team052/src/utils/zipUtilsSection.ts":{"path":"/Users/justin/project_team052/src/utils/zipUtilsSection.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":66}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":64}},"7":{"start":{"line":11,"column":16},"end":{"line":11,"column":37}},"8":{"start":{"line":12,"column":20},"end":{"line":12,"column":68}},"9":{"start":{"line":13,"column":22},"end":{"line":13,"column":48}},"10":{"start":{"line":14,"column":27},"end":{"line":14,"column":29}},"11":{"start":{"line":15,"column":4},"end":{"line":19,"column":5}},"12":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"13":{"start":{"line":17,"column":12},"end":{"line":17,"column":42}},"14":{"start":{"line":20,"column":31},"end":{"line":27,"column":6}},"15":{"start":{"line":21,"column":21},"end":{"line":21,"column":43}},"16":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"17":{"start":{"line":23,"column":32},"end":{"line":23,"column":58}},"18":{"start":{"line":24,"column":12},"end":{"line":24,"column":43}},"19":{"start":{"line":26,"column":8},"end":{"line":26,"column":18}},"20":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"21":{"start":{"line":29,"column":8},"end":{"line":29,"column":130}},"22":{"start":{"line":31,"column":4},"end":{"line":31,"column":49}},"23":{"start":{"line":33,"column":0},"end":{"line":33,"column":58}},"24":{"start":{"line":35,"column":4},"end":{"line":35,"column":108}},"25":{"start":{"line":38,"column":27},"end":{"line":38,"column":116}},"26":{"start":{"line":39,"column":21},"end":{"line":39,"column":23}},"27":{"start":{"line":40,"column":4},"end":{"line":54,"column":5}},"28":{"start":{"line":41,"column":8},"end":{"line":53,"column":9}},"29":{"start":{"line":42,"column":35},"end":{"line":42,"column":84}},"30":{"start":{"line":42,"column":67},"end":{"line":42,"column":83}},"31":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"32":{"start":{"line":44,"column":16},"end":{"line":44,"column":25}},"33":{"start":{"line":46,"column":32},"end":{"line":46,"column":36}},"34":{"start":{"line":47,"column":27},"end":{"line":47,"column":47}},"35":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"36":{"start":{"line":49,"column":16},"end":{"line":49,"column":39}},"37":{"start":{"line":51,"column":31},"end":{"line":51,"column":208}},"38":{"start":{"line":52,"column":12},"end":{"line":52,"column":38}},"39":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"40":{"start":{"line":56,"column":8},"end":{"line":56,"column":87}},"41":{"start":{"line":58,"column":4},"end":{"line":58,"column":20}},"42":{"start":{"line":60,"column":0},"end":{"line":60,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"Base64ZipToJsonSections","decl":{"start":{"line":10,"column":15},"end":{"line":10,"column":38}},"loc":{"start":{"line":10,"column":50},"end":{"line":32,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":50},"end":{"line":20,"column":51}},"loc":{"start":{"line":20,"column":70},"end":{"line":27,"column":5}},"line":20},"3":{"name":"courseFileNameInCorrectFormat","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":38}},"loc":{"start":{"line":34,"column":49},"end":{"line":36,"column":1}},"line":34},"4":{"name":"jsonToSections","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":23}},"loc":{"start":{"line":37,"column":34},"end":{"line":59,"column":1}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":56},"end":{"line":42,"column":57}},"loc":{"start":{"line":42,"column":67},"end":{"line":42,"column":83}},"line":42}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"4":{"loc":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},{"start":{"line":22,"column":8},"end":{"line":25,"column":9}}],"line":22},"5":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"6":{"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":107}},"type":"binary-expr","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":42}},{"start":{"line":35,"column":46},"end":{"line":35,"column":77}},{"start":{"line":35,"column":81},"end":{"line":35,"column":107}}],"line":35},"7":{"loc":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},{"start":{"line":43,"column":12},"end":{"line":45,"column":13}}],"line":43},"8":{"loc":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},{"start":{"line":48,"column":12},"end":{"line":50,"column":13}}],"line":48},"9":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{"line":55,"column":4},"end":{"line":57,"column":5}}],"line":55}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":25,"8":25,"9":25,"10":25,"11":25,"12":12033,"13":11938,"14":25,"15":11938,"16":11938,"17":11938,"18":11938,"19":0,"20":25,"21":3,"22":22,"23":1,"24":12033,"25":20,"26":20,"27":20,"28":11936,"29":130347,"30":1303458,"31":130347,"32":2,"33":130345,"34":130345,"35":130345,"36":49696,"37":130345,"38":130345,"39":20,"40":1,"41":19,"42":1},"f":{"0":1,"1":25,"2":11938,"3":12033,"4":20,"5":1303458},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[11938,95],"4":[11938,0],"5":[3,22],"6":[12033,11963,11957],"7":[2,130345],"8":[49696,80649],"9":[1,19]},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/utils/zipUtilsSection.ts","sources":["/Users/justin/project_team052/src/utils/zipUtilsSection.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport { Section } from \"../models/section\";\nimport { InsightError } from \"../controller/IInsightFacade\";\n\nexport async function Base64ZipToJsonSections(b64string: string): Promise<any> {\n\tconst zip = new JSZip();\n\tconst zipData = await zip.loadAsync(b64string, { base64: true });\n\n\t// Filter valid file names\n\tconst fileNames = Object.keys(zipData.files);\n\tconst validFileNames = [];\n\tfor (const fileName of fileNames) {\n\t\tif (courseFileNameInCorrectFormat(fileName)) {\n\t\t\tvalidFileNames.push(fileName);\n\t\t}\n\t}\n\n\t// For each valid file name, map to the respective jsonData of that file\n\tconst courseDataPromises: Promise<any>[] = validFileNames.map(async (fileName) => {\n\t\tconst file = zipData.file(fileName);\n\n\t\tif (file) {\n\t\t\tconst fileContent = await file.async(\"string\");\n\t\t\treturn JSON.parse(fileContent);\n\t\t}\n\t\treturn {};\n\t});\n\n\t// Check if dataset is invalid\n\tif (courseDataPromises.length === 0) {\n\t\tthrow new InsightError(\"dataset empty or invalid, was unable to parse course sections from given files\");\n\t}\n\n\t// Await promises\n\treturn await Promise.all(courseDataPromises);\n}\n\n/*\n * Verifies that the course file name is in the format \"courses/ABDC123\"\n * - filters out .DS_Store file, automatically added on Mac\n *\n * */\nfunction courseFileNameInCorrectFormat(fileName: string): boolean {\n\treturn fileName.startsWith(\"courses/\") && !fileName.endsWith(\".DS_Store\") && !(fileName === \"courses/\");\n}\n\n/*\n * The JSON data parsed by the above Base64ZipToJSON function has the following form:\n *\n * {\n * \t[\n * \t\t\"CPSC111\": {\n * \t\t\t\"result\": [... array of sections]\n * \t\t},\n * \t\t\"next course\":{...}\n * \t]\n * }\n *\n * this function assumes this format\n * */\nexport function jsonToSections(jsonData: any): Section[] {\n\tconst requiredFields = [\"id\", \"Course\", \"Title\", \"Professor\", \"Subject\", \"Year\", \"Avg\", \"Pass\", \"Fail\", \"Audit\"];\n\tconst sections: Section[] = [];\n\n\tfor (const course of jsonData) {\n\t\tfor (const section of course.result) {\n\t\t\t//verify that the section has all required fields - skip if not\n\t\t\tconst sectionIsValid = requiredFields.every((field) => field in section);\n\n\t\t\tif (!sectionIsValid) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst overallYear = 1900;\n\t\t\tlet trueYear = Number(section.Year);\n\t\t\tif (section.Section === \"overall\") {\n\t\t\t\ttrueYear = overallYear;\n\t\t\t}\n\n\t\t\tconst sectionObj = new Section(\n\t\t\t\tsection.id.toString(),\n\t\t\t\tsection.Course,\n\t\t\t\tsection.Title,\n\t\t\t\tsection.Professor,\n\t\t\t\tsection.Subject,\n\t\t\t\ttrueYear,\n\t\t\t\tsection.Avg,\n\t\t\t\tsection.Pass,\n\t\t\t\tsection.Fail,\n\t\t\t\tsection.Audit\n\t\t\t);\n\n\t\t\tsections.push(sectionObj);\n\t\t}\n\t}\n\n\tif (sections.length === 0) {\n\t\tthrow new InsightError(\"No valid course sections in dataset\");\n\t}\n\n\treturn sections;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"906754bf4da2993583c065104ed52b2da74ba54b","contentHash":"b37916806084b0386d25e5d55846b85cada9121a2b50f9e3a4cfdf176c255fec"},"/Users/justin/project_team052/src/models/section.ts":{"path":"/Users/justin/project_team052/src/models/section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":21}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":37}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":25}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":27}},"12":{"start":{"line":28,"column":8},"end":{"line":39,"column":9}},"13":{"start":{"line":30,"column":16},"end":{"line":30,"column":33}},"14":{"start":{"line":32,"column":16},"end":{"line":32,"column":32}},"15":{"start":{"line":34,"column":16},"end":{"line":34,"column":33}},"16":{"start":{"line":36,"column":16},"end":{"line":36,"column":33}},"17":{"start":{"line":38,"column":16},"end":{"line":38,"column":34}},"18":{"start":{"line":40,"column":8},"end":{"line":40,"column":87}},"19":{"start":{"line":43,"column":8},"end":{"line":54,"column":9}},"20":{"start":{"line":45,"column":16},"end":{"line":45,"column":33}},"21":{"start":{"line":47,"column":16},"end":{"line":47,"column":31}},"22":{"start":{"line":49,"column":16},"end":{"line":49,"column":34}},"23":{"start":{"line":51,"column":16},"end":{"line":51,"column":39}},"24":{"start":{"line":53,"column":16},"end":{"line":53,"column":39}},"25":{"start":{"line":55,"column":8},"end":{"line":55,"column":87}},"26":{"start":{"line":58,"column":0},"end":{"line":58,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":87},"end":{"line":26,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":28},"end":{"line":41,"column":5}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":28},"end":{"line":56,"column":5}},"line":42}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":8},"end":{"line":39,"column":9}},"type":"switch","locations":[{"start":{"line":29,"column":12},"end":{"line":30,"column":33}},{"start":{"line":31,"column":12},"end":{"line":32,"column":32}},{"start":{"line":33,"column":12},"end":{"line":34,"column":33}},{"start":{"line":35,"column":12},"end":{"line":36,"column":33}},{"start":{"line":37,"column":12},"end":{"line":38,"column":34}}],"line":28},"1":{"loc":{"start":{"line":43,"column":8},"end":{"line":54,"column":9}},"type":"switch","locations":[{"start":{"line":44,"column":12},"end":{"line":45,"column":33}},{"start":{"line":46,"column":12},"end":{"line":47,"column":31}},{"start":{"line":48,"column":12},"end":{"line":49,"column":34}},{"start":{"line":50,"column":12},"end":{"line":51,"column":39}},{"start":{"line":52,"column":12},"end":{"line":53,"column":39}}],"line":43}},"s":{"0":1,"1":1,"2":2587386,"3":2587386,"4":2587386,"5":2587386,"6":2587386,"7":2587386,"8":2587386,"9":2587386,"10":2587386,"11":2587386,"12":1370019,"13":64613,"14":1046955,"15":129225,"16":64613,"17":64613,"18":0,"19":1305914,"20":64613,"21":323527,"22":64613,"23":193901,"24":659260,"25":0,"26":1},"f":{"0":2587386,"1":1370019,"2":1305914},"b":{"0":[64613,1046955,129225,64613,64613],"1":[64613,323527,64613,193901,659260]},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/models/section.ts","sources":["/Users/justin/project_team052/src/models/section.ts"],"names":[],"mappings":";;;AAAA,MAAa,OAAO;IACF,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAE/B,YACC,IAAY,EACZ,EAAU,EACV,KAAa,EACb,UAAkB,EAClB,UAAkB,EAClB,IAAY,EACZ,GAAW,EACX,IAAY,EACZ,IAAY,EACZ,KAAa;QAEb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAEM,SAAS,CAAC,YAAoB;QACpC,QAAQ,YAAY,EAAE;YACrB,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,IAAI,CAAC;YAClB,KAAK,KAAK;gBACT,OAAO,IAAI,CAAC,GAAG,CAAC;YACjB,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,IAAI,CAAC;YAClB,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,IAAI,CAAC;YAClB,KAAK,OAAO;gBACX,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAED,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,YAAY,GAAG,oBAAoB,CAAC,CAAC;IAChF,CAAC;IAEM,SAAS,CAAC,YAAoB;QACpC,QAAQ,YAAY,EAAE;YACrB,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,IAAI,CAAC;YAClB,KAAK,IAAI;gBACR,OAAO,IAAI,CAAC,EAAE,CAAC;YAChB,KAAK,OAAO;gBACX,OAAO,IAAI,CAAC,KAAK,CAAC;YACnB,KAAK,YAAY;gBAChB,OAAO,IAAI,CAAC,UAAU,CAAC;YACxB,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;QAED,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,YAAY,GAAG,oBAAoB,CAAC,CAAC;IAChF,CAAC;CACD;AArED,0BAqEC","sourcesContent":["export class Section {\n\tprivate readonly uuid: String;\n\tprivate readonly id: String;\n\tprivate readonly title: String;\n\tprivate readonly instructor: String;\n\tprivate readonly department: String;\n\tprivate readonly year: number;\n\tprivate readonly avg: number;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number;\n\n\tconstructor(\n\t\tuuid: String,\n\t\tid: String,\n\t\ttitle: String,\n\t\tinstructor: String,\n\t\tdepartment: String,\n\t\tyear: number,\n\t\tavg: number,\n\t\tpass: number,\n\t\tfail: number,\n\t\taudit: number\n\t) {\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.department = department;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n\n\tpublic getMField(propertyName: string): number {\n\t\tswitch (propertyName) {\n\t\t\tcase \"year\":\n\t\t\t\treturn this.year;\n\t\t\tcase \"avg\":\n\t\t\t\treturn this.avg;\n\t\t\tcase \"pass\":\n\t\t\t\treturn this.pass;\n\t\t\tcase \"fail\":\n\t\t\t\treturn this.fail;\n\t\t\tcase \"audit\":\n\t\t\t\treturn this.audit;\n\t\t}\n\n\t\tthrow new Error(\"Error: propertyName '\" + propertyName + \"' is not an MFIELD\");\n\t}\n\n\tpublic getSField(propertyName: string): String {\n\t\tswitch (propertyName) {\n\t\t\tcase \"uuid\":\n\t\t\t\treturn this.uuid;\n\t\t\tcase \"id\":\n\t\t\t\treturn this.id;\n\t\t\tcase \"title\":\n\t\t\t\treturn this.title;\n\t\t\tcase \"instructor\":\n\t\t\t\treturn this.instructor;\n\t\t\tcase \"dept\":\n\t\t\t\treturn this.department;\n\t\t}\n\n\t\tthrow new Error(\"Error: propertyName '\" + propertyName + \"' is not an SFIELD\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4988691bd7e6758ec7124944f03589bd467a7789","contentHash":"6b763e87b32573bf91927fb13999c09948e55c6dbc08b59b57fe205e2d261a94"},"/Users/justin/project_team052/src/models/sectionsDataset.ts":{"path":"/Users/justin/project_team052/src/models/sectionsDataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":33}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":21}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":25}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":29}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":45},"end":{"line":14,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":18},"end":{"line":17,"column":5}},"line":15}},"branchMap":{},"s":{"0":1,"1":1,"2":84,"3":84,"4":84,"5":84,"6":35,"7":1},"f":{"0":84,"1":35},"b":{},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/models/sectionsDataset.ts","sources":["/Users/justin/project_team052/src/models/sectionsDataset.ts"],"names":[],"mappings":";;;AAGA,MAAa,eAAe;IACV,QAAQ,CAAY;IACrB,EAAE,CAAS;IACX,IAAI,CAAqB;IACzB,OAAO,CAAS;IAEhC,YAAY,QAAmB,EAAE,EAAU,EAAE,IAAwB,EAAE,OAAe;QACrF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;CACD;AAhBD,0CAgBC","sourcesContent":["import { InsightDataset, InsightDatasetKind } from \"../controller/IInsightFacade\";\nimport { Section } from \"./section\";\n\nexport class SectionsDataset implements InsightDataset {\n\tprivate readonly sections: Section[];\n\tpublic readonly id: string;\n\tpublic readonly kind: InsightDatasetKind;\n\tpublic readonly numRows: number;\n\n\tconstructor(sections: Section[], id: string, kind: InsightDatasetKind, numRows: number) {\n\t\tthis.sections = sections;\n\t\tthis.id = id;\n\t\tthis.kind = kind;\n\t\tthis.numRows = numRows;\n\t}\n\n\tpublic getSections(): Section[] {\n\t\treturn this.sections;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cf5fa756d736dc7f174c8cb51b3ec86f15baf9db","contentHash":"b3bba8a975c71fb11a20c46dc483313246ec83981adf87c014b1507f5db18ac2"},"/Users/justin/project_team052/src/utils/persistenceUtils.ts":{"path":"/Users/justin/project_team052/src/utils/persistenceUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":68}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":46}},"3":{"start":{"line":5,"column":26},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":56}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":40}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":23}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":26}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":30}},"9":{"start":{"line":12,"column":20},"end":{"line":12,"column":36}},"10":{"start":{"line":13,"column":4},"end":{"line":16,"column":5}},"11":{"start":{"line":14,"column":27},"end":{"line":14,"column":197}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":34}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":78}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":54}},"15":{"start":{"line":21,"column":18},"end":{"line":21,"column":20}},"16":{"start":{"line":22,"column":15},"end":{"line":22,"column":26}},"17":{"start":{"line":23,"column":17},"end":{"line":23,"column":30}},"18":{"start":{"line":24,"column":20},"end":{"line":24,"column":36}},"19":{"start":{"line":25,"column":4},"end":{"line":28,"column":5}},"20":{"start":{"line":26,"column":24},"end":{"line":26,"column":178}},"21":{"start":{"line":27,"column":8},"end":{"line":27,"column":28}},"22":{"start":{"line":29,"column":4},"end":{"line":29,"column":69}},"23":{"start":{"line":31,"column":0},"end":{"line":31,"column":48}}},"fnMap":{"0":{"name":"jsonToSectionsDataset","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":30}},"loc":{"start":{"line":8,"column":41},"end":{"line":18,"column":1}},"line":8},"1":{"name":"jsonToRoomsDataset","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":27}},"loc":{"start":{"line":20,"column":38},"end":{"line":30,"column":1}},"line":20}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":65,"7":65,"8":65,"9":65,"10":65,"11":2457041,"12":2457041,"13":65,"14":1,"15":2,"16":2,"17":2,"18":2,"19":2,"20":728,"21":728,"22":2,"23":1},"f":{"0":65,"1":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/utils/persistenceUtils.ts","sources":["/Users/justin/project_team052/src/utils/persistenceUtils.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAC5C,+DAA4D;AAC5D,yDAAsD;AACtD,yCAAsC;AAEtC,SAAgB,qBAAqB,CAAC,QAAa;IAClD,MAAM,QAAQ,GAAc,EAAE,CAAC;IAC/B,MAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;IACvB,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC3B,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IAEjC,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAC,QAAQ,EAAE;QACxC,MAAM,UAAU,GAAG,IAAI,iBAAO,CAC7B,OAAO,CAAC,EAAE,EACV,OAAO,CAAC,MAAM,EACd,OAAO,CAAC,KAAK,EACb,OAAO,CAAC,SAAS,EACjB,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,GAAG,EACX,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,KAAK,CACb,CAAC;QAEF,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC1B;IAED,OAAO,IAAI,iCAAe,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACzD,CAAC;AAxBD,sDAwBC;AAED,SAAgB,kBAAkB,CAAC,QAAa;IAC/C,MAAM,KAAK,GAAW,EAAE,CAAC;IACzB,MAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;IACvB,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC3B,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IAEjC,KAAK,MAAM,IAAI,IAAI,QAAQ,CAAC,KAAK,EAAE;QAClC,MAAM,OAAO,GAAG,IAAI,WAAI,CACvB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,IAAI,CACT,CAAC;QAEF,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpB;IACD,OAAO,IAAI,2BAAY,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACnD,CAAC;AAxBD,gDAwBC","sourcesContent":["import { Section } from \"../models/section\";\nimport { SectionsDataset } from \"../models/sectionsDataset\";\nimport { RoomsDataset } from \"../models/roomsDataset\";\nimport { Room } from \"../models/room\";\n\nexport function jsonToSectionsDataset(jsonData: any): SectionsDataset {\n\tconst sections: Section[] = [];\n\tconst id = jsonData.id;\n\tconst kind = jsonData.kind;\n\tconst numRows = jsonData.numRows;\n\n\tfor (const section of jsonData.sections) {\n\t\tconst sectionObj = new Section(\n\t\t\tsection.id,\n\t\t\tsection.Course,\n\t\t\tsection.Title,\n\t\t\tsection.Professor,\n\t\t\tsection.Subject,\n\t\t\tsection.Year,\n\t\t\tsection.Avg,\n\t\t\tsection.Pass,\n\t\t\tsection.Fail,\n\t\t\tsection.Audit\n\t\t);\n\n\t\tsections.push(sectionObj);\n\t}\n\n\treturn new SectionsDataset(sections, id, kind, numRows);\n}\n\nexport function jsonToRoomsDataset(jsonData: any): RoomsDataset {\n\tconst rooms: Room[] = [];\n\tconst id = jsonData.id;\n\tconst kind = jsonData.kind;\n\tconst numRows = jsonData.numRows;\n\n\tfor (const room of jsonData.rooms) {\n\t\tconst roomObj = new Room(\n\t\t\troom.fullname,\n\t\t\troom.shortname,\n\t\t\troom.number,\n\t\t\troom.name,\n\t\t\troom.address,\n\t\t\troom.lat,\n\t\t\troom.lon,\n\t\t\troom.seats,\n\t\t\troom.type,\n\t\t\troom.furniture,\n\t\t\troom.href\n\t\t);\n\n\t\trooms.push(roomObj);\n\t}\n\treturn new RoomsDataset(rooms, id, kind, numRows);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0e9c0d5b56e88bb10c7abc1c0deaac4d8b897286","contentHash":"88781d22aa3838fe5d3cc0da4d85279a4b47a7bc8b6baff93b531a8d9e4c0c73"},"/Users/justin/project_team052/src/models/roomsDataset.ts":{"path":"/Users/justin/project_team052/src/models/roomsDataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":27}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":21}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":25}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":26}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":42},"end":{"line":14,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":15},"end":{"line":17,"column":5}},"line":15}},"branchMap":{},"s":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3,"6":0,"7":1},"f":{"0":3,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/models/roomsDataset.ts","sources":["/Users/justin/project_team052/src/models/roomsDataset.ts"],"names":[],"mappings":";;;AAGA,MAAa,YAAY;IACP,KAAK,CAAS;IACf,EAAE,CAAS;IACX,IAAI,CAAqB;IACzB,OAAO,CAAS;IAEhC,YAAY,KAAa,EAAE,EAAU,EAAE,IAAwB,EAAE,OAAe;QAC/E,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CACD;AAhBD,oCAgBC","sourcesContent":["import { InsightDataset, InsightDatasetKind } from \"../controller/IInsightFacade\";\nimport { Room } from \"./room\";\n\nexport class RoomsDataset implements InsightDataset {\n\tprivate readonly rooms: Room[];\n\tpublic readonly id: string;\n\tpublic readonly kind: InsightDatasetKind;\n\tpublic readonly numRows: number;\n\n\tconstructor(rooms: Room[], id: string, kind: InsightDatasetKind, numRows: number) {\n\t\tthis.rooms = rooms;\n\t\tthis.id = id;\n\t\tthis.kind = kind;\n\t\tthis.numRows = numRows;\n\t}\n\n\tpublic getRooms(): Room[] {\n\t\treturn this.rooms;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f4f89bc1313aad11247bf5093fa2be58f08b6467","contentHash":"facb710085da946b8b38b22c763630a0de71da33fb34c07bd0818b7310810f06"},"/Users/justin/project_team052/src/models/room.ts":{"path":"/Users/justin/project_team052/src/models/room.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":33}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":35}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":23}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":25}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":35}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"13":{"start":{"line":30,"column":8},"end":{"line":37,"column":9}},"14":{"start":{"line":32,"column":16},"end":{"line":32,"column":32}},"15":{"start":{"line":34,"column":16},"end":{"line":34,"column":32}},"16":{"start":{"line":36,"column":16},"end":{"line":36,"column":34}},"17":{"start":{"line":38,"column":8},"end":{"line":38,"column":87}},"18":{"start":{"line":41,"column":8},"end":{"line":58,"column":9}},"19":{"start":{"line":43,"column":16},"end":{"line":43,"column":37}},"20":{"start":{"line":45,"column":16},"end":{"line":45,"column":38}},"21":{"start":{"line":47,"column":16},"end":{"line":47,"column":35}},"22":{"start":{"line":49,"column":16},"end":{"line":49,"column":33}},"23":{"start":{"line":51,"column":16},"end":{"line":51,"column":36}},"24":{"start":{"line":53,"column":16},"end":{"line":53,"column":33}},"25":{"start":{"line":55,"column":16},"end":{"line":55,"column":38}},"26":{"start":{"line":57,"column":16},"end":{"line":57,"column":33}},"27":{"start":{"line":59,"column":8},"end":{"line":59,"column":87}},"28":{"start":{"line":62,"column":0},"end":{"line":62,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":100},"end":{"line":28,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":28},"end":{"line":39,"column":5}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":28},"end":{"line":60,"column":5}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":8},"end":{"line":37,"column":9}},"type":"switch","locations":[{"start":{"line":31,"column":12},"end":{"line":32,"column":32}},{"start":{"line":33,"column":12},"end":{"line":34,"column":32}},{"start":{"line":35,"column":12},"end":{"line":36,"column":34}}],"line":30},"1":{"loc":{"start":{"line":41,"column":8},"end":{"line":58,"column":9}},"type":"switch","locations":[{"start":{"line":42,"column":12},"end":{"line":43,"column":37}},{"start":{"line":44,"column":12},"end":{"line":45,"column":38}},{"start":{"line":46,"column":12},"end":{"line":47,"column":35}},{"start":{"line":48,"column":12},"end":{"line":49,"column":33}},{"start":{"line":50,"column":12},"end":{"line":51,"column":36}},{"start":{"line":52,"column":12},"end":{"line":53,"column":33}},{"start":{"line":54,"column":12},"end":{"line":55,"column":38}},{"start":{"line":56,"column":12},"end":{"line":57,"column":33}}],"line":41}},"s":{"0":1,"1":1,"2":1092,"3":1092,"4":1092,"5":1092,"6":1092,"7":1092,"8":1092,"9":1092,"10":1092,"11":1092,"12":1092,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"f":{"0":1092,"1":0,"2":0},"b":{"0":[0,0,0],"1":[0,0,0,0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/models/room.ts","sources":["/Users/justin/project_team052/src/models/room.ts"],"names":[],"mappings":";;;AAAA,MAAa,IAAI;IACC,QAAQ,CAAS;IACjB,SAAS,CAAS;IAClB,MAAM,CAAS;IACf,IAAI,CAAS;IACb,OAAO,CAAS;IAChB,GAAG,CAAS;IACZ,GAAG,CAAS;IACZ,KAAK,CAAS;IACd,IAAI,CAAS;IACb,SAAS,CAAS;IAClB,IAAI,CAAS;IAE9B,YACC,QAAgB,EAChB,SAAiB,EACjB,MAAc,EACd,IAAY,EACZ,OAAe,EACf,GAAW,EACX,GAAW,EACX,KAAa,EACb,IAAY,EACZ,SAAiB,EACjB,IAAY;QAEZ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,SAAS,CAAC,YAAoB;QACpC,QAAQ,YAAY,EAAE;YACrB,KAAK,KAAK;gBACT,OAAO,IAAI,CAAC,GAAG,CAAC;YACjB,KAAK,KAAK;gBACT,OAAO,IAAI,CAAC,GAAG,CAAC;YACjB,KAAK,OAAO;gBACX,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAED,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,YAAY,GAAG,oBAAoB,CAAC,CAAC;IAChF,CAAC;IAEM,SAAS,CAAC,YAAoB;QACpC,QAAQ,YAAY,EAAE;YACrB,KAAK,UAAU;gBACd,OAAO,IAAI,CAAC,QAAQ,CAAC;YACtB,KAAK,WAAW;gBACf,OAAO,IAAI,CAAC,SAAS,CAAC;YACvB,KAAK,QAAQ;gBACZ,OAAO,IAAI,CAAC,MAAM,CAAC;YACpB,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,IAAI,CAAC;YAClB,KAAK,SAAS;gBACb,OAAO,IAAI,CAAC,OAAO,CAAC;YACrB,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,IAAI,CAAC;YAClB,KAAK,WAAW;gBACf,OAAO,IAAI,CAAC,SAAS,CAAC;YACvB,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QAED,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,YAAY,GAAG,oBAAoB,CAAC,CAAC;IAChF,CAAC;CACD;AA1ED,oBA0EC","sourcesContent":["export class Room {\n\tprivate readonly fullname: string;\n\tprivate readonly shortname: string;\n\tprivate readonly number: string;\n\tprivate readonly name: string;\n\tprivate readonly address: string;\n\tprivate readonly lat: number;\n\tprivate readonly lon: number;\n\tprivate readonly seats: number;\n\tprivate readonly type: string;\n\tprivate readonly furniture: string;\n\tprivate readonly href: string;\n\n\tconstructor(\n\t\tfullname: string,\n\t\tshortname: string,\n\t\tnumber: string,\n\t\tname: string,\n\t\taddress: string,\n\t\tlat: number,\n\t\tlon: number,\n\t\tseats: number,\n\t\ttype: string,\n\t\tfurniture: string,\n\t\thref: string\n\t) {\n\t\tthis.fullname = fullname;\n\t\tthis.shortname = shortname;\n\t\tthis.number = number;\n\t\tthis.name = name;\n\t\tthis.address = address;\n\t\tthis.lat = lat;\n\t\tthis.lon = lon;\n\t\tthis.seats = seats;\n\t\tthis.type = type;\n\t\tthis.furniture = furniture;\n\t\tthis.href = href;\n\t}\n\n\tpublic getMField(propertyName: string): number {\n\t\tswitch (propertyName) {\n\t\t\tcase \"lat\":\n\t\t\t\treturn this.lat;\n\t\t\tcase \"lon\":\n\t\t\t\treturn this.lon;\n\t\t\tcase \"seats\":\n\t\t\t\treturn this.seats;\n\t\t}\n\n\t\tthrow new Error(\"Error: propertyName '\" + propertyName + \"' is not an MFIELD\");\n\t}\n\n\tpublic getSField(propertyName: string): String {\n\t\tswitch (propertyName) {\n\t\t\tcase \"fullname\":\n\t\t\t\treturn this.fullname;\n\t\t\tcase \"shortname\":\n\t\t\t\treturn this.shortname;\n\t\t\tcase \"number\":\n\t\t\t\treturn this.number;\n\t\t\tcase \"name\":\n\t\t\t\treturn this.name;\n\t\t\tcase \"address\":\n\t\t\t\treturn this.address;\n\t\t\tcase \"type\":\n\t\t\t\treturn this.type;\n\t\t\tcase \"furniture\":\n\t\t\t\treturn this.furniture;\n\t\t\tcase \"href\":\n\t\t\t\treturn this.href;\n\t\t}\n\n\t\tthrow new Error(\"Error: propertyName '\" + propertyName + \"' is not an SFIELD\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f7b9614ed64ac786419feda01b7ef8f692f8572a","contentHash":"a4ebe899e1da6cb10d6b371986661276aab20d947cf8c3726aee4c7ab04552e7"},"/Users/justin/project_team052/src/utils/queryEngineUtils.ts":{"path":"/Users/justin/project_team052/src/utils/queryEngineUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":258}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":38}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":43}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"6":{"start":{"line":11,"column":25},"end":{"line":11,"column":43}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":43}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}},"9":{"start":{"line":16,"column":20},"end":{"line":16,"column":60}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":35}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}},"12":{"start":{"line":21,"column":20},"end":{"line":21,"column":65}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":35}},"14":{"start":{"line":24,"column":0},"end":{"line":24,"column":28}},"15":{"start":{"line":26,"column":24},"end":{"line":26,"column":45}},"16":{"start":{"line":27,"column":23},"end":{"line":27,"column":65}},"17":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"18":{"start":{"line":29,"column":8},"end":{"line":29,"column":20}},"19":{"start":{"line":31,"column":4},"end":{"line":48,"column":5}},"20":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"21":{"start":{"line":33,"column":12},"end":{"line":33,"column":141}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":80}},"23":{"start":{"line":37,"column":9},"end":{"line":48,"column":5}},"24":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"25":{"start":{"line":39,"column":12},"end":{"line":39,"column":141}},"26":{"start":{"line":41,"column":8},"end":{"line":41,"column":76}},"27":{"start":{"line":43,"column":9},"end":{"line":48,"column":5}},"28":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"29":{"start":{"line":45,"column":12},"end":{"line":45,"column":141}},"30":{"start":{"line":47,"column":8},"end":{"line":47,"column":82}},"31":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"32":{"start":{"line":50,"column":8},"end":{"line":50,"column":137}},"33":{"start":{"line":52,"column":4},"end":{"line":52,"column":33}},"34":{"start":{"line":54,"column":0},"end":{"line":54,"column":52}},"35":{"start":{"line":56,"column":21},"end":{"line":56,"column":26}},"36":{"start":{"line":58,"column":4},"end":{"line":63,"column":5}},"37":{"start":{"line":59,"column":8},"end":{"line":62,"column":9}},"38":{"start":{"line":60,"column":12},"end":{"line":60,"column":30}},"39":{"start":{"line":61,"column":12},"end":{"line":61,"column":45}},"40":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"41":{"start":{"line":65,"column":8},"end":{"line":65,"column":82}},"42":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"43":{"start":{"line":68,"column":8},"end":{"line":68,"column":99}},"44":{"start":{"line":70,"column":23},"end":{"line":70,"column":46}},"45":{"start":{"line":71,"column":20},"end":{"line":71,"column":22}},"46":{"start":{"line":72,"column":4},"end":{"line":76,"column":5}},"47":{"start":{"line":72,"column":17},"end":{"line":72,"column":18}},"48":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"49":{"start":{"line":74,"column":12},"end":{"line":74,"column":51}},"50":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"51":{"start":{"line":78,"column":8},"end":{"line":78,"column":93}},"52":{"start":{"line":80,"column":4},"end":{"line":80,"column":21}},"53":{"start":{"line":82,"column":0},"end":{"line":82,"column":36}},"54":{"start":{"line":84,"column":24},"end":{"line":84,"column":26}},"55":{"start":{"line":85,"column":26},"end":{"line":85,"column":31}},"56":{"start":{"line":86,"column":4},"end":{"line":94,"column":5}},"57":{"start":{"line":86,"column":17},"end":{"line":86,"column":18}},"58":{"start":{"line":87,"column":8},"end":{"line":93,"column":9}},"59":{"start":{"line":88,"column":12},"end":{"line":90,"column":13}},"60":{"start":{"line":89,"column":16},"end":{"line":89,"column":116}},"61":{"start":{"line":91,"column":12},"end":{"line":91,"column":62}},"62":{"start":{"line":92,"column":12},"end":{"line":92,"column":35}},"63":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"64":{"start":{"line":96,"column":8},"end":{"line":96,"column":93}},"65":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"66":{"start":{"line":99,"column":8},"end":{"line":99,"column":153}},"67":{"start":{"line":101,"column":4},"end":{"line":101,"column":25}},"68":{"start":{"line":103,"column":0},"end":{"line":103,"column":52}},"69":{"start":{"line":105,"column":21},"end":{"line":105,"column":23}},"70":{"start":{"line":106,"column":26},"end":{"line":106,"column":31}},"71":{"start":{"line":107,"column":4},"end":{"line":115,"column":5}},"72":{"start":{"line":107,"column":17},"end":{"line":107,"column":18}},"73":{"start":{"line":108,"column":8},"end":{"line":114,"column":9}},"74":{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},"75":{"start":{"line":110,"column":16},"end":{"line":110,"column":116}},"76":{"start":{"line":112,"column":12},"end":{"line":112,"column":86}},"77":{"start":{"line":113,"column":12},"end":{"line":113,"column":35}},"78":{"start":{"line":116,"column":4},"end":{"line":130,"column":5}},"79":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"80":{"start":{"line":118,"column":12},"end":{"line":118,"column":126}},"81":{"start":{"line":121,"column":9},"end":{"line":130,"column":5}},"82":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"83":{"start":{"line":123,"column":12},"end":{"line":123,"column":126}},"84":{"start":{"line":126,"column":9},"end":{"line":130,"column":5}},"85":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"86":{"start":{"line":128,"column":12},"end":{"line":128,"column":118}},"87":{"start":{"line":131,"column":4},"end":{"line":131,"column":22}},"88":{"start":{"line":133,"column":0},"end":{"line":133,"column":54}},"89":{"start":{"line":135,"column":19},"end":{"line":135,"column":71}},"90":{"start":{"line":136,"column":4},"end":{"line":155,"column":5}},"91":{"start":{"line":137,"column":8},"end":{"line":149,"column":11}},"92":{"start":{"line":138,"column":25},"end":{"line":138,"column":33}},"93":{"start":{"line":139,"column":25},"end":{"line":139,"column":33}},"94":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"95":{"start":{"line":141,"column":16},"end":{"line":141,"column":26}},"96":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"97":{"start":{"line":144,"column":16},"end":{"line":144,"column":25}},"98":{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},"99":{"start":{"line":147,"column":16},"end":{"line":147,"column":25}},"100":{"start":{"line":151,"column":9},"end":{"line":155,"column":5}},"101":{"start":{"line":152,"column":8},"end":{"line":154,"column":11}},"102":{"start":{"line":153,"column":12},"end":{"line":153,"column":52}},"103":{"start":{"line":156,"column":4},"end":{"line":156,"column":20}},"104":{"start":{"line":158,"column":0},"end":{"line":158,"column":34}},"105":{"start":{"line":160,"column":0},"end":{"line":164,"column":80}},"106":{"start":{"line":161,"column":4},"end":{"line":161,"column":72}},"107":{"start":{"line":162,"column":4},"end":{"line":162,"column":72}},"108":{"start":{"line":163,"column":4},"end":{"line":163,"column":62}}},"fnMap":{"0":{"name":"isLComparator","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":33},"end":{"line":8,"column":1}},"line":5},"1":{"name":"isMComparator","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":22}},"loc":{"start":{"line":10,"column":33},"end":{"line":13,"column":1}},"line":10},"2":{"name":"isMField","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":17}},"loc":{"start":{"line":15,"column":25},"end":{"line":18,"column":1}},"line":15},"3":{"name":"isSField","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":17}},"loc":{"start":{"line":20,"column":25},"end":{"line":23,"column":1}},"line":20},"4":{"name":"doesInputStringMatch","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":29}},"loc":{"start":{"line":25,"column":50},"end":{"line":53,"column":1}},"line":25},"5":{"name":"getDatasetId","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":21}},"loc":{"start":{"line":55,"column":36},"end":{"line":81,"column":1}},"line":55},"6":{"name":"getAndCheckDatasetId","decl":{"start":{"line":83,"column":9},"end":{"line":83,"column":29}},"loc":{"start":{"line":83,"column":68},"end":{"line":102,"column":1}},"line":83},"7":{"name":"getAndCheckColumnName","decl":{"start":{"line":104,"column":9},"end":{"line":104,"column":30}},"loc":{"start":{"line":104,"column":66},"end":{"line":132,"column":1}},"line":104},"8":{"name":"sortByOrder","decl":{"start":{"line":134,"column":9},"end":{"line":134,"column":20}},"loc":{"start":{"line":134,"column":38},"end":{"line":157,"column":1}},"line":134},"9":{"name":"(anonymous_9)","decl":{"start":{"line":137,"column":22},"end":{"line":137,"column":23}},"loc":{"start":{"line":137,"column":38},"end":{"line":149,"column":9}},"line":137},"10":{"name":"(anonymous_10)","decl":{"start":{"line":152,"column":22},"end":{"line":152,"column":23}},"loc":{"start":{"line":152,"column":38},"end":{"line":154,"column":9}},"line":152},"11":{"name":"(anonymous_11)","decl":{"start":{"line":160,"column":1},"end":{"line":160,"column":2}},"loc":{"start":{"line":160,"column":28},"end":{"line":164,"column":1}},"line":160}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"1":{"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":51}},"type":"binary-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":28}},{"start":{"line":28,"column":32},"end":{"line":28,"column":51}}],"line":28},"2":{"loc":{"start":{"line":31,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":48,"column":5}},{"start":{"line":31,"column":4},"end":{"line":48,"column":5}}],"line":31},"3":{"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":49}},"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":27}},{"start":{"line":31,"column":31},"end":{"line":31,"column":49}}],"line":31},"4":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32},"5":{"loc":{"start":{"line":37,"column":9},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":9},"end":{"line":48,"column":5}},{"start":{"line":37,"column":9},"end":{"line":48,"column":5}}],"line":37},"6":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38},"7":{"loc":{"start":{"line":43,"column":9},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":9},"end":{"line":48,"column":5}},{"start":{"line":43,"column":9},"end":{"line":48,"column":5}}],"line":43},"8":{"loc":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},{"start":{"line":44,"column":8},"end":{"line":46,"column":9}}],"line":44},"9":{"loc":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},{"start":{"line":49,"column":4},"end":{"line":51,"column":5}}],"line":49},"10":{"loc":{"start":{"line":59,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":62,"column":9}},{"start":{"line":59,"column":8},"end":{"line":62,"column":9}}],"line":59},"11":{"loc":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},{"start":{"line":64,"column":4},"end":{"line":66,"column":5}}],"line":64},"12":{"loc":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},{"start":{"line":67,"column":4},"end":{"line":69,"column":5}}],"line":67},"13":{"loc":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},{"start":{"line":73,"column":8},"end":{"line":75,"column":9}}],"line":73},"14":{"loc":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},{"start":{"line":77,"column":4},"end":{"line":79,"column":5}}],"line":77},"15":{"loc":{"start":{"line":87,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":93,"column":9}},{"start":{"line":87,"column":8},"end":{"line":93,"column":9}}],"line":87},"16":{"loc":{"start":{"line":88,"column":12},"end":{"line":90,"column":13}},"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":90,"column":13}},{"start":{"line":88,"column":12},"end":{"line":90,"column":13}}],"line":88},"17":{"loc":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},{"start":{"line":95,"column":4},"end":{"line":97,"column":5}}],"line":95},"18":{"loc":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},{"start":{"line":98,"column":4},"end":{"line":100,"column":5}}],"line":98},"19":{"loc":{"start":{"line":108,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":114,"column":9}},{"start":{"line":108,"column":8},"end":{"line":114,"column":9}}],"line":108},"20":{"loc":{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},"type":"if","locations":[{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},{"start":{"line":109,"column":12},"end":{"line":111,"column":13}}],"line":109},"21":{"loc":{"start":{"line":116,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":130,"column":5}},{"start":{"line":116,"column":4},"end":{"line":130,"column":5}}],"line":116},"22":{"loc":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},{"start":{"line":117,"column":8},"end":{"line":119,"column":9}}],"line":117},"23":{"loc":{"start":{"line":121,"column":9},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":121,"column":9},"end":{"line":130,"column":5}},{"start":{"line":121,"column":9},"end":{"line":130,"column":5}}],"line":121},"24":{"loc":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},{"start":{"line":122,"column":8},"end":{"line":124,"column":9}}],"line":122},"25":{"loc":{"start":{"line":126,"column":9},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":126,"column":9},"end":{"line":130,"column":5}},{"start":{"line":126,"column":9},"end":{"line":130,"column":5}}],"line":126},"26":{"loc":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},{"start":{"line":127,"column":8},"end":{"line":129,"column":9}}],"line":127},"27":{"loc":{"start":{"line":127,"column":12},"end":{"line":127,"column":58}},"type":"binary-expr","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":33}},{"start":{"line":127,"column":37},"end":{"line":127,"column":58}}],"line":127},"28":{"loc":{"start":{"line":136,"column":4},"end":{"line":155,"column":5}},"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":155,"column":5}},{"start":{"line":136,"column":4},"end":{"line":155,"column":5}}],"line":136},"29":{"loc":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},{"start":{"line":140,"column":12},"end":{"line":142,"column":13}}],"line":140},"30":{"loc":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},{"start":{"line":143,"column":12},"end":{"line":145,"column":13}}],"line":143},"31":{"loc":{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},{"start":{"line":146,"column":12},"end":{"line":148,"column":13}}],"line":146},"32":{"loc":{"start":{"line":151,"column":9},"end":{"line":155,"column":5}},"type":"if","locations":[{"start":{"line":151,"column":9},"end":{"line":155,"column":5}},{"start":{"line":151,"column":9},"end":{"line":155,"column":5}}],"line":151},"33":{"loc":{"start":{"line":164,"column":21},"end":{"line":164,"column":78}},"type":"binary-expr","locations":[{"start":{"line":164,"column":21},"end":{"line":164,"column":44}},{"start":{"line":164,"column":49},"end":{"line":164,"column":77}}],"line":164}},"s":{"0":1,"1":1,"2":1,"3":74,"4":74,"5":1,"6":56,"7":56,"8":1,"9":699841,"10":699841,"11":1,"12":415041,"13":415041,"14":1,"15":1098406,"16":1098406,"17":1098406,"18":0,"19":1098406,"20":0,"21":0,"22":0,"23":1098406,"24":0,"25":0,"26":0,"27":1098406,"28":258448,"29":0,"30":258448,"31":839958,"32":2,"33":839956,"34":1,"35":38,"36":38,"37":58,"38":37,"39":37,"40":38,"41":1,"42":37,"43":2,"44":35,"45":35,"46":35,"47":35,"48":449,"49":35,"50":35,"51":0,"52":35,"53":1,"54":349947,"55":349947,"56":349947,"57":349947,"58":4277143,"59":349948,"60":1,"61":349947,"62":349947,"63":349946,"64":0,"65":349946,"66":1,"67":349945,"68":1,"69":349955,"70":349955,"71":349955,"72":349955,"73":4277239,"74":349955,"75":0,"76":349955,"77":349955,"78":349955,"79":23,"80":3,"81":349932,"82":23,"83":2,"84":349909,"85":349909,"86":0,"87":349950,"88":1,"89":10,"90":10,"91":9,"92":109465,"93":109465,"94":109465,"95":56614,"96":52851,"97":32220,"98":20631,"99":20631,"100":1,"101":1,"102":230,"103":10,"104":1,"105":1,"106":1,"107":1,"108":1},"f":{"0":74,"1":56,"2":699841,"3":415041,"4":1098406,"5":38,"6":349947,"7":349955,"8":10,"9":109465,"10":230,"11":1},"b":{"0":[0,1098406],"1":[1098406,1098406],"2":[0,1098406],"3":[1098406,0],"4":[0,0],"5":[0,1098406],"6":[0,0],"7":[258448,839958],"8":[0,258448],"9":[2,839956],"10":[37,21],"11":[1,37],"12":[2,35],"13":[35,414],"14":[0,35],"15":[349948,3927195],"16":[1,349947],"17":[0,349946],"18":[1,349945],"19":[349955,3927284],"20":[0,349955],"21":[23,349932],"22":[3,20],"23":[23,349909],"24":[2,21],"25":[349909,0],"26":[0,349909],"27":[349909,207509],"28":[9,1],"29":[56614,52851],"30":[32220,20631],"31":[20631,0],"32":[1,0],"33":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/utils/queryEngineUtils.ts","sources":["/Users/justin/project_team052/src/utils/queryEngineUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError, InsightResult } from \"../controller/IInsightFacade\";\n\nexport function isLComparator(queryKey: string): boolean {\n\tconst lComparators = [\"AND\", \"OR\"];\n\n\treturn lComparators.includes(queryKey);\n}\n\nexport function isMComparator(queryKey: string): boolean {\n\tconst lComparators = [\"GT\", \"LT\", \"EQ\"];\n\n\treturn lComparators.includes(queryKey);\n}\n\nexport function isMField(field: string): boolean {\n\tconst mFields = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\n\treturn mFields.includes(field);\n}\n\nexport function isSField(field: string): boolean {\n\tconst sFields = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\n\treturn sFields.includes(field);\n}\n\n// Returns true if value matches given input string, false otherwise\n// Throws Insight Error if given inputstring contains asterisks in places other than the beginning and end\nexport function doesInputStringMatch(inputString: string, value: string): boolean {\n\tconst firstLetter = inputString.charAt(0);\n\tconst lastLetter = inputString.charAt(inputString.length - 1);\n\n\tif (inputString === \"**\" || inputString === \"*\") {\n\t\treturn true;\n\t}\n\n\tif (firstLetter === \"*\" && lastLetter === \"*\") {\n\t\tif (inputString.substring(1, inputString.length - 1).includes(\"*\")) {\n\t\t\tthrow new InsightError(\"Invalid Query: input string includes asterisk(s) that are not at the beginning or end\");\n\t\t}\n\n\t\treturn value.includes(inputString.substring(1, inputString.length - 1));\n\t} else if (firstLetter === \"*\") {\n\t\tif (inputString.substring(1, inputString.length).includes(\"*\")) {\n\t\t\tthrow new InsightError(\"Invalid Query: input string includes asterisk(s) that are not at the beginning or end\");\n\t\t}\n\n\t\treturn value.endsWith(inputString.substring(1, inputString.length));\n\t} else if (lastLetter === \"*\") {\n\t\tif (inputString.substring(0, inputString.length - 1).includes(\"*\")) {\n\t\t\tthrow new InsightError(\"Invalid Query: input string includes asterisk(s) that are not at the beginning or end\");\n\t\t}\n\n\t\treturn value.startsWith(inputString.substring(0, inputString.length - 1));\n\t}\n\n\tif (inputString.includes(\"*\")) {\n\t\tthrow new InsightError(\"Invalid Query: input string includes asterisk(s) that are not at the beginning or end\");\n\t}\n\n\treturn inputString === value;\n}\n\nexport function getDatasetId(queryOptions: any): string {\n\tlet hasColumns = false;\n\tlet columns: any;\n\tfor (const queryKey in queryOptions) {\n\t\tif (queryKey === \"COLUMNS\") {\n\t\t\thasColumns = true;\n\t\t\tcolumns = queryOptions[queryKey];\n\t\t}\n\t}\n\tif (!hasColumns) {\n\t\tthrow new InsightError(\"Invalid Query: Missing COLUMNS\");\n\t}\n\tif (columns.length <= 0) {\n\t\tthrow new InsightError(\"Invalid Query: Columns cannot be an empty array\");\n\t}\n\n\t// traverse down options->columns->columns[0] to check which dataset is being used???? super scuffed\n\tconst columnName: string = queryOptions.COLUMNS[0];\n\tlet datasetId = \"\";\n\tfor (let i = 0; i < columnName.length; i++) {\n\t\tif (columnName.charAt(i) === \"_\") {\n\t\t\tdatasetId = columnName.substring(0, i);\n\t\t}\n\t}\n\tif (datasetId === \"\") {\n\t\tthrow new InsightError(\"Invalid Query: Dataset ID cannot be empty\");\n\t}\n\n\treturn datasetId;\n}\n\nexport function getAndCheckDatasetId(datasetColumnPair: string, previousDatasetId: string): string {\n\tlet thisDatasetId = \"\";\n\tlet underscoreFound = false;\n\tfor (let i = 0; i < datasetColumnPair.length; i++) {\n\t\tif (datasetColumnPair.charAt(i) === \"_\") {\n\t\t\tif (underscoreFound) {\n\t\t\t\tthrow new InsightError(\"Invalid Query: dataset key contains multiple underscores\");\n\t\t\t}\n\n\t\t\tthisDatasetId = datasetColumnPair.substring(0, i);\n\t\t\tunderscoreFound = true;\n\t\t}\n\t}\n\n\tif (thisDatasetId === \"\") {\n\t\tthrow new InsightError(\"Invalid Query: Dataset ID cannot be empty\");\n\t}\n\n\tif (thisDatasetId !== previousDatasetId) {\n\t\tthrow new InsightError(\n\t\t\t\"Invalid Query: multiple datasets referenced: '\" + thisDatasetId + \"' and '\" + previousDatasetId + \"'.\"\n\t\t);\n\t}\n\n\treturn thisDatasetId;\n}\n\nexport function getAndCheckColumnName(datasetColumnPair: string, comparisonType: QueryComparison): string {\n\tlet columnName = \"\";\n\tlet underscoreFound = false;\n\tfor (let i = 0; i < datasetColumnPair.length; i++) {\n\t\tif (datasetColumnPair.charAt(i) === \"_\") {\n\t\t\tif (underscoreFound) {\n\t\t\t\tthrow new InsightError(\"Invalid Query: dataset key contains multiple underscores\");\n\t\t\t}\n\n\t\t\tcolumnName = datasetColumnPair.substring(i + 1, datasetColumnPair.length);\n\t\t\tunderscoreFound = true;\n\t\t}\n\t}\n\n\tif (comparisonType === QueryComparison.SCOMPARISON) {\n\t\tif (!isSField(columnName)) {\n\t\t\tthrow new InsightError(\"Invalid Query: SCOMPARISON performed with an non-SFIELD: \" + columnName);\n\t\t}\n\t} else if (comparisonType === QueryComparison.MCOMPARISON) {\n\t\tif (!isMField(columnName)) {\n\t\t\tthrow new InsightError(\"Invalid Query: MCOMPARISON performed with an non-MFIELD: \" + columnName);\n\t\t}\n\t} else if (comparisonType === QueryComparison.EITHER) {\n\t\tif (!isMField(columnName) && !isSField(columnName)) {\n\t\t\tthrow new InsightError(\"Invalid Query: \" + columnName + \" is not a valid column field!\");\n\t\t}\n\t}\n\n\treturn columnName;\n}\n\nexport function sortByOrder(sections: any, order: string): InsightResult[] {\n\tconst column = getAndCheckColumnName(order, QueryComparison.EITHER);\n\n\tif (isMField(column)) {\n\t\t// order by\n\t\tsections.sort(function (a: any, b: any) {\n\t\t\tconst aNum = a[order];\n\t\t\tconst bNum = b[order];\n\t\t\tif (aNum < bNum) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (aNum > bNum) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (aNum === bNum) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\t} else if (isSField(column)) {\n\t\t// order by alphabetical\n\t\tsections.sort(function (a: any, b: any) {\n\t\t\treturn a[order].localeCompare(b[order]);\n\t\t});\n\t}\n\n\treturn sections;\n}\n\nexport enum QueryComparison {\n\tMCOMPARISON,\n\tSCOMPARISON,\n\tEITHER,\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"54d231912171f29032316f65044b31c1569dd54a","contentHash":"5749cfe17b10505a5f387113d127b69a92f24c206e297b03af7eb657df5fdaa1"},"/Users/justin/project_team052/src/utils/queryParsingEngine.ts":{"path":"/Users/justin/project_team052/src/utils/queryParsingEngine.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":221}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":27},"end":{"line":5,"column":56}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":24}},"6":{"start":{"line":11,"column":27},"end":{"line":11,"column":28}},"7":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":102}},"9":{"start":{"line":15,"column":21},"end":{"line":15,"column":48}},"10":{"start":{"line":16,"column":4},"end":{"line":30,"column":5}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":89}},"12":{"start":{"line":19,"column":9},"end":{"line":30,"column":5}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":89}},"14":{"start":{"line":22,"column":9},"end":{"line":30,"column":5}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":79}},"16":{"start":{"line":25,"column":9},"end":{"line":30,"column":5}},"17":{"start":{"line":26,"column":8},"end":{"line":26,"column":76}},"18":{"start":{"line":29,"column":8},"end":{"line":29,"column":84}},"19":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"20":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"21":{"start":{"line":35,"column":17},"end":{"line":35,"column":19}},"22":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":104}},"24":{"start":{"line":39,"column":4},"end":{"line":47,"column":5}},"25":{"start":{"line":40,"column":8},"end":{"line":40,"column":71}},"26":{"start":{"line":42,"column":9},"end":{"line":47,"column":5}},"27":{"start":{"line":43,"column":8},"end":{"line":43,"column":70}},"28":{"start":{"line":46,"column":8},"end":{"line":46,"column":104}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":18}},"30":{"start":{"line":50,"column":0},"end":{"line":50,"column":46}},"31":{"start":{"line":52,"column":17},"end":{"line":52,"column":19}},"32":{"start":{"line":53,"column":4},"end":{"line":70,"column":5}},"33":{"start":{"line":54,"column":32},"end":{"line":54,"column":81}},"34":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"35":{"start":{"line":56,"column":12},"end":{"line":56,"column":22}},"36":{"start":{"line":58,"column":8},"end":{"line":69,"column":9}},"37":{"start":{"line":59,"column":12},"end":{"line":59,"column":45}},"38":{"start":{"line":62,"column":30},"end":{"line":62,"column":32}},"39":{"start":{"line":63,"column":12},"end":{"line":67,"column":13}},"40":{"start":{"line":64,"column":16},"end":{"line":66,"column":17}},"41":{"start":{"line":65,"column":20},"end":{"line":65,"column":44}},"42":{"start":{"line":68,"column":12},"end":{"line":68,"column":31}},"43":{"start":{"line":71,"column":4},"end":{"line":71,"column":18}},"44":{"start":{"line":73,"column":0},"end":{"line":73,"column":50}},"45":{"start":{"line":75,"column":17},"end":{"line":75,"column":19}},"46":{"start":{"line":76,"column":4},"end":{"line":79,"column":5}},"47":{"start":{"line":77,"column":32},"end":{"line":77,"column":81}},"48":{"start":{"line":78,"column":8},"end":{"line":78,"column":63}},"49":{"start":{"line":80,"column":4},"end":{"line":80,"column":18}},"50":{"start":{"line":82,"column":0},"end":{"line":82,"column":48}},"51":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"52":{"start":{"line":85,"column":8},"end":{"line":85,"column":140}},"53":{"start":{"line":87,"column":30},"end":{"line":87,"column":57}},"54":{"start":{"line":88,"column":4},"end":{"line":88,"column":79}},"55":{"start":{"line":89,"column":30},"end":{"line":89,"column":142}},"56":{"start":{"line":90,"column":28},"end":{"line":90,"column":58}},"57":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"58":{"start":{"line":92,"column":8},"end":{"line":92,"column":121}},"59":{"start":{"line":94,"column":19},"end":{"line":94,"column":21}},"60":{"start":{"line":95,"column":4},"end":{"line":105,"column":5}},"61":{"start":{"line":96,"column":22},"end":{"line":96,"column":58}},"62":{"start":{"line":97,"column":8},"end":{"line":104,"column":9}},"63":{"start":{"line":98,"column":12},"end":{"line":98,"column":101}},"64":{"start":{"line":100,"column":13},"end":{"line":104,"column":9}},"65":{"start":{"line":103,"column":12},"end":{"line":103,"column":33}},"66":{"start":{"line":106,"column":4},"end":{"line":106,"column":18}},"67":{"start":{"line":108,"column":0},"end":{"line":108,"column":46}},"68":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"69":{"start":{"line":111,"column":8},"end":{"line":111,"column":95}},"70":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"71":{"start":{"line":114,"column":8},"end":{"line":114,"column":101}},"72":{"start":{"line":116,"column":30},"end":{"line":116,"column":57}},"73":{"start":{"line":117,"column":4},"end":{"line":117,"column":79}},"74":{"start":{"line":118,"column":30},"end":{"line":118,"column":142}},"75":{"start":{"line":119,"column":28},"end":{"line":119,"column":58}},"76":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"77":{"start":{"line":121,"column":8},"end":{"line":121,"column":121}},"78":{"start":{"line":123,"column":19},"end":{"line":123,"column":21}},"79":{"start":{"line":124,"column":4},"end":{"line":129,"column":5}},"80":{"start":{"line":125,"column":22},"end":{"line":125,"column":58}},"81":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"82":{"start":{"line":127,"column":12},"end":{"line":127,"column":33}},"83":{"start":{"line":130,"column":4},"end":{"line":130,"column":18}},"84":{"start":{"line":132,"column":0},"end":{"line":132,"column":46}},"85":{"start":{"line":134,"column":19},"end":{"line":134,"column":21}},"86":{"start":{"line":135,"column":29},"end":{"line":135,"column":74}},"87":{"start":{"line":136,"column":4},"end":{"line":140,"column":5}},"88":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"89":{"start":{"line":138,"column":12},"end":{"line":138,"column":33}},"90":{"start":{"line":141,"column":4},"end":{"line":141,"column":18}},"91":{"start":{"line":143,"column":0},"end":{"line":143,"column":40}},"92":{"start":{"line":146,"column":16},"end":{"line":146,"column":20}},"93":{"start":{"line":147,"column":4},"end":{"line":157,"column":5}},"94":{"start":{"line":148,"column":8},"end":{"line":156,"column":9}},"95":{"start":{"line":149,"column":12},"end":{"line":149,"column":45}},"96":{"start":{"line":151,"column":13},"end":{"line":156,"column":9}},"97":{"start":{"line":152,"column":12},"end":{"line":152,"column":43}},"98":{"start":{"line":155,"column":12},"end":{"line":155,"column":93}},"99":{"start":{"line":158,"column":17},"end":{"line":158,"column":19}},"100":{"start":{"line":159,"column":4},"end":{"line":172,"column":5}},"101":{"start":{"line":160,"column":30},"end":{"line":160,"column":32}},"102":{"start":{"line":161,"column":8},"end":{"line":170,"column":9}},"103":{"start":{"line":162,"column":12},"end":{"line":162,"column":87}},"104":{"start":{"line":163,"column":31},"end":{"line":163,"column":138}},"105":{"start":{"line":164,"column":12},"end":{"line":169,"column":13}},"106":{"start":{"line":165,"column":16},"end":{"line":165,"column":81}},"107":{"start":{"line":167,"column":17},"end":{"line":169,"column":13}},"108":{"start":{"line":168,"column":16},"end":{"line":168,"column":81}},"109":{"start":{"line":171,"column":8},"end":{"line":171,"column":35}},"110":{"start":{"line":173,"column":4},"end":{"line":178,"column":5}},"111":{"start":{"line":174,"column":8},"end":{"line":176,"column":9}},"112":{"start":{"line":175,"column":12},"end":{"line":175,"column":104}},"113":{"start":{"line":177,"column":8},"end":{"line":177,"column":68}},"114":{"start":{"line":179,"column":4},"end":{"line":179,"column":18}},"115":{"start":{"line":181,"column":0},"end":{"line":181,"column":38}}},"fnMap":{"0":{"name":"handleWhere","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":20}},"loc":{"start":{"line":6,"column":55},"end":{"line":32,"column":1}},"line":6},"1":{"name":"handleLComparison","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":26}},"loc":{"start":{"line":34,"column":71},"end":{"line":49,"column":1}},"line":34},"2":{"name":"handleAndComparison","decl":{"start":{"line":51,"column":9},"end":{"line":51,"column":28}},"loc":{"start":{"line":51,"column":63},"end":{"line":72,"column":1}},"line":51},"3":{"name":"handleOrComparison","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":27}},"loc":{"start":{"line":74,"column":62},"end":{"line":81,"column":1}},"line":74},"4":{"name":"handleMComparison","decl":{"start":{"line":83,"column":9},"end":{"line":83,"column":26}},"loc":{"start":{"line":83,"column":71},"end":{"line":107,"column":1}},"line":83},"5":{"name":"handleSComparison","decl":{"start":{"line":109,"column":9},"end":{"line":109,"column":26}},"loc":{"start":{"line":109,"column":61},"end":{"line":131,"column":1}},"line":109},"6":{"name":"handleNegation","decl":{"start":{"line":133,"column":9},"end":{"line":133,"column":23}},"loc":{"start":{"line":133,"column":58},"end":{"line":142,"column":1}},"line":133},"7":{"name":"handleOptions","decl":{"start":{"line":144,"column":9},"end":{"line":144,"column":22}},"loc":{"start":{"line":144,"column":58},"end":{"line":180,"column":1}},"line":144}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{"line":8,"column":4},"end":{"line":10,"column":5}}],"line":8},"1":{"loc":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},{"start":{"line":12,"column":4},"end":{"line":14,"column":5}}],"line":12},"2":{"loc":{"start":{"line":16,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":30,"column":5}},{"start":{"line":16,"column":4},"end":{"line":30,"column":5}}],"line":16},"3":{"loc":{"start":{"line":19,"column":9},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":9},"end":{"line":30,"column":5}},{"start":{"line":19,"column":9},"end":{"line":30,"column":5}}],"line":19},"4":{"loc":{"start":{"line":22,"column":9},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":9},"end":{"line":30,"column":5}},{"start":{"line":22,"column":9},"end":{"line":30,"column":5}}],"line":22},"5":{"loc":{"start":{"line":25,"column":9},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":9},"end":{"line":30,"column":5}},{"start":{"line":25,"column":9},"end":{"line":30,"column":5}}],"line":25},"6":{"loc":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{"line":36,"column":4},"end":{"line":38,"column":5}}],"line":36},"7":{"loc":{"start":{"line":39,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":47,"column":5}},{"start":{"line":39,"column":4},"end":{"line":47,"column":5}}],"line":39},"8":{"loc":{"start":{"line":42,"column":9},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":9},"end":{"line":47,"column":5}},{"start":{"line":42,"column":9},"end":{"line":47,"column":5}}],"line":42},"9":{"loc":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},{"start":{"line":55,"column":8},"end":{"line":57,"column":9}}],"line":55},"10":{"loc":{"start":{"line":58,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":69,"column":9}},{"start":{"line":58,"column":8},"end":{"line":69,"column":9}}],"line":58},"11":{"loc":{"start":{"line":64,"column":16},"end":{"line":66,"column":17}},"type":"if","locations":[{"start":{"line":64,"column":16},"end":{"line":66,"column":17}},{"start":{"line":64,"column":16},"end":{"line":66,"column":17}}],"line":64},"12":{"loc":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},{"start":{"line":84,"column":4},"end":{"line":86,"column":5}}],"line":84},"13":{"loc":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},{"start":{"line":91,"column":4},"end":{"line":93,"column":5}}],"line":91},"14":{"loc":{"start":{"line":97,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":104,"column":9}},{"start":{"line":97,"column":8},"end":{"line":104,"column":9}}],"line":97},"15":{"loc":{"start":{"line":100,"column":13},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":13},"end":{"line":104,"column":9}},{"start":{"line":100,"column":13},"end":{"line":104,"column":9}}],"line":100},"16":{"loc":{"start":{"line":100,"column":17},"end":{"line":102,"column":60}},"type":"binary-expr","locations":[{"start":{"line":100,"column":18},"end":{"line":100,"column":35}},{"start":{"line":100,"column":39},"end":{"line":100,"column":62}},{"start":{"line":101,"column":13},"end":{"line":101,"column":30}},{"start":{"line":101,"column":34},"end":{"line":101,"column":57}},{"start":{"line":102,"column":13},"end":{"line":102,"column":30}},{"start":{"line":102,"column":34},"end":{"line":102,"column":59}}],"line":100},"17":{"loc":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},{"start":{"line":110,"column":4},"end":{"line":112,"column":5}}],"line":110},"18":{"loc":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},{"start":{"line":113,"column":4},"end":{"line":115,"column":5}}],"line":113},"19":{"loc":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},{"start":{"line":120,"column":4},"end":{"line":122,"column":5}}],"line":120},"20":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126},"21":{"loc":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},{"start":{"line":137,"column":8},"end":{"line":139,"column":9}}],"line":137},"22":{"loc":{"start":{"line":148,"column":8},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":156,"column":9}},{"start":{"line":148,"column":8},"end":{"line":156,"column":9}}],"line":148},"23":{"loc":{"start":{"line":151,"column":13},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":13},"end":{"line":156,"column":9}},{"start":{"line":151,"column":13},"end":{"line":156,"column":9}}],"line":151},"24":{"loc":{"start":{"line":164,"column":12},"end":{"line":169,"column":13}},"type":"if","locations":[{"start":{"line":164,"column":12},"end":{"line":169,"column":13}},{"start":{"line":164,"column":12},"end":{"line":169,"column":13}}],"line":164},"25":{"loc":{"start":{"line":167,"column":17},"end":{"line":169,"column":13}},"type":"if","locations":[{"start":{"line":167,"column":17},"end":{"line":169,"column":13}},{"start":{"line":167,"column":17},"end":{"line":169,"column":13}}],"line":167},"26":{"loc":{"start":{"line":173,"column":4},"end":{"line":178,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":178,"column":5}},{"start":{"line":173,"column":4},"end":{"line":178,"column":5}}],"line":173},"27":{"loc":{"start":{"line":174,"column":8},"end":{"line":176,"column":9}},"type":"if","locations":[{"start":{"line":174,"column":8},"end":{"line":176,"column":9}},{"start":{"line":174,"column":8},"end":{"line":176,"column":9}}],"line":174}},"s":{"0":1,"1":1,"2":1,"3":1,"4":76,"5":2,"6":74,"7":74,"8":0,"9":74,"10":74,"11":18,"12":56,"13":24,"14":32,"15":25,"16":7,"17":4,"18":3,"19":52,"20":1,"21":18,"22":18,"23":3,"24":15,"25":12,"26":3,"27":3,"28":0,"29":13,"30":1,"31":12,"32":12,"33":30,"34":28,"35":0,"36":28,"37":11,"38":17,"39":17,"40":6767,"41":322,"42":17,"43":10,"44":1,"45":3,"46":3,"47":7,"48":7,"49":3,"50":1,"51":24,"52":0,"53":24,"54":24,"55":23,"56":21,"57":21,"58":2,"59":19,"60":19,"61":1227628,"62":1227628,"63":0,"64":1227628,"65":234106,"66":19,"67":1,"68":25,"69":1,"70":24,"71":0,"72":24,"73":24,"74":23,"75":20,"76":20,"77":1,"78":19,"79":19,"80":1098406,"81":1098406,"82":31454,"83":17,"84":1,"85":4,"86":4,"87":3,"88":193836,"89":80243,"90":3,"91":1,"92":16,"93":16,"94":27,"95":16,"96":11,"97":11,"98":0,"99":16,"100":16,"101":142387,"102":142387,"103":349899,"104":349899,"105":349899,"106":142391,"107":207508,"108":207508,"109":142387,"110":16,"111":11,"112":1,"113":10,"114":15,"115":1},"f":{"0":76,"1":18,"2":12,"3":3,"4":24,"5":25,"6":4,"7":16},"b":{"0":[2,74],"1":[0,74],"2":[18,56],"3":[24,32],"4":[25,7],"5":[4,3],"6":[3,15],"7":[12,3],"8":[3,0],"9":[0,28],"10":[11,17],"11":[322,6445],"12":[0,24],"13":[2,19],"14":[0,1227628],"15":[234106,993522],"16":[1227628,581508,1146617,258448,1097042,387672],"17":[1,24],"18":[0,24],"19":[1,19],"20":[31454,1066950],"21":[80243,113593],"22":[16,11],"23":[11,0],"24":[142391,207508],"25":[207508,0],"26":[11,5],"27":[1,10]},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/utils/queryParsingEngine.ts","sources":["/Users/justin/project_team052/src/utils/queryParsingEngine.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError, InsightResult } from \"../controller/IInsightFacade\";\nimport {\n\tdoesInputStringMatch,\n\tgetAndCheckColumnName,\n\tgetAndCheckDatasetId,\n\tisLComparator,\n\tisMComparator,\n\tisMField,\n\tisSField,\n\tQueryComparison,\n\tsortByOrder,\n} from \"./queryEngineUtils\";\n\n/* Takes queryParameters (a {'FILTER'})\n\teg.\n\n\t{\n\t\t\"AND\": [\n\t\t\t{\n\t\t\t\t\"GT\": {\n\t\t\t\t\t\"sections_avg\": 90\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"IS\": {\n\t\t\t\t\t\"sections_dept\": \"biol\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n  \t}\n\n\tor\n\n\t{\n\t\t\"GT\": {\n\t\t\t\"sections_avg\": 90\n\t\t}\n\t}\n\n\tReturns sections that match the given query parameters\n\t*/\nexport function handleWhere(queryParams: any, sections: any, datasetId: string): InsightResult[] {\n\tlet result;\n\n\t// Return all sections if parameters are empty\n\tif (Object.keys(queryParams).length === 0) {\n\t\treturn sections;\n\t}\n\n\tconst MAX_QUERY_KEYS = 1;\n\tif (queryParams.length > MAX_QUERY_KEYS) {\n\t\tthrow new InsightError(\"Invalid Query: WHERE should only have 1 key, has 2\");\n\t}\n\n\t// Match queryParams key to comparator type (logic comparison, mcomparison, etc.)\n\tconst queryKey = Object.keys(queryParams)[0];\n\tif (isLComparator(queryKey)) {\n\t\tresult = handleLComparison(queryKey, queryParams[queryKey], sections, datasetId);\n\t} else if (isMComparator(queryKey)) {\n\t\tresult = handleMComparison(queryKey, queryParams[queryKey], sections, datasetId);\n\t} else if (queryKey === \"IS\") {\n\t\tresult = handleSComparison(queryParams[queryKey], sections, datasetId);\n\t} else if (queryKey === \"NOT\") {\n\t\tresult = handleNegation(queryParams[queryKey], sections, datasetId);\n\t} else {\n\t\tthrow new InsightError(\"Invalid Query: Invalid query key\");\n\t}\n\n\treturn result;\n}\n\n/* Takes queryKey (\"AND\" or \"OR\") and queryParams (an array of {'FILTER': {...}})\neg.\n[\n\t{\n\t\t\"GT\": {\n\t\t\t\"sections_avg\": 90\n\t\t}\n\t},\n\t{\n\t\t\"IS\": {\n\t\t\t\"sections_dept\": \"biol\"\n\t\t}\n\t}\n]\n\n// Returns sections that match the given query parameters\n*/\nexport function handleLComparison(\n\tqueryKey: string,\n\tqueryParams: any,\n\tsections: any,\n\tdatasetId: string\n): InsightResult[] {\n\tlet result: InsightResult[] = [];\n\n\tif (queryParams.length === 0) {\n\t\tthrow new InsightError(\"Invalid Query: Logic Comparison Filter List is empty\");\n\t}\n\n\tif (queryKey === \"AND\") {\n\t\tresult = handleAndComparison(queryParams, sections, datasetId);\n\t} else if (queryKey === \"OR\") {\n\t\tresult = handleOrComparison(queryParams, sections, datasetId);\n\t} else {\n\t\tthrow new InsightError(\"Invalid Query: Invalid Logic Comparator: \" + queryKey);\n\t}\n\n\treturn result;\n}\n\nexport function handleAndComparison(queryParams: any, sections: any, datasetId: string): InsightResult[] {\n\tlet result: InsightResult[] = [];\n\tfor (const innerQueryParam of queryParams) {\n\t\tconst recursiveResult = handleWhere(innerQueryParam, sections, datasetId);\n\n\t\t// Any sections AND [] returns []\n\t\tif (recursiveResult.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (result.length === 0) {\n\t\t\t// First iteration initializes result\n\t\t\tresult = recursiveResult.slice();\n\t\t} else {\n\t\t\t// All other iterations compare the returned sections to the result and removes section if it is not in both\n\t\t\tconst newResult = [];\n\t\t\tfor (const section of result) {\n\t\t\t\tif (recursiveResult.includes(section)) {\n\t\t\t\t\tnewResult.push(section);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult = newResult;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function handleOrComparison(queryParams: any, sections: any, datasetId: string): InsightResult[] {\n\tlet result: InsightResult[] = [];\n\tfor (const innerQueryParam of queryParams) {\n\t\tconst recursiveResult = handleWhere(innerQueryParam, sections, datasetId);\n\n\t\t// Combine and remove duplicates (WARNING: may be screwy if object references don't match)\n\t\tresult = [...new Set([...result, ...recursiveResult])];\n\t}\n\treturn result;\n}\n\n/* Takes queryKey (\"GT\" or \"LT\" or \"EQ\") and queryParams (a {mkey: number})\neg.\n\n{\n\t\"sections_avg\": 90\n}\n\n// Returns sections that match the given query parameters\n*/\nexport function handleMComparison(\n\tqueryKey: string,\n\tqueryParams: any,\n\tsections: any,\n\tdatasetId: string\n): InsightResult[] {\n\tif (Object.keys(queryParams).length !== 1) {\n\t\tthrow new InsightError(\"Invalid Query: invalid number of keys in MCOMPARISON: \" + Object.keys(queryParams).length);\n\t}\n\n\tconst datasetColumnPair = Object.keys(queryParams)[0]; // eg. sections_avg\n\tgetAndCheckDatasetId(datasetColumnPair, datasetId);\n\tconst thisDatasetColumn = getAndCheckColumnName(datasetColumnPair, QueryComparison.MCOMPARISON);\n\n\tconst comparisonValue = queryParams[datasetColumnPair];\n\n\tif (typeof comparisonValue !== \"number\") {\n\t\tthrow new InsightError(\"Invalid Query: Invalid type in MCOMPARISON: \" + typeof comparisonValue);\n\t}\n\n\tconst result: InsightResult[] = [];\n\n\tfor (const section of sections) {\n\t\tconst value = section.getMField(thisDatasetColumn);\n\n\t\tif (![\"GT\", \"LT\", \"EQ\"].includes(queryKey)) {\n\t\t\tthrow new InsightError(\"Invalid Query: invalid query key: \" + queryKey);\n\t\t} else if (\n\t\t\t(queryKey === \"GT\" && value > comparisonValue) ||\n\t\t\t(queryKey === \"LT\" && value < comparisonValue) ||\n\t\t\t(queryKey === \"EQ\" && value === comparisonValue)\n\t\t) {\n\t\t\tresult.push(section);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/* Takes queryParameters (values which correspond to the WHERE key in the given query json)\n{\n\t\"sections_dept\": \"*ol\"\n}\n// Returns sections that match the given query parameters\n */\nexport function handleSComparison(queryParams: any, sections: any, datasetId: string): InsightResult[] {\n\tif (Object.keys(queryParams).length === 0) {\n\t\tthrow new InsightError(\"Invalid Query: no keys found in SCOMPARISON\");\n\t}\n\n\tif (Object.keys(queryParams).length > 1) {\n\t\tthrow new InsightError(\"Invalid Query: too many query keys in SCOMPARISON\");\n\t}\n\n\tconst datasetColumnPair = Object.keys(queryParams)[0]; // eg. sections_avg\n\tgetAndCheckDatasetId(datasetColumnPair, datasetId);\n\tconst thisDatasetColumn = getAndCheckColumnName(datasetColumnPair, QueryComparison.SCOMPARISON);\n\n\tconst comparisonValue = queryParams[datasetColumnPair];\n\n\tif (typeof comparisonValue !== \"string\") {\n\t\tthrow new InsightError(\"Invalid Query: Invalid type in SCOMPARISON: \" + typeof comparisonValue);\n\t}\n\n\tconst result: InsightResult[] = [];\n\n\tfor (const section of sections) {\n\t\tconst value = section.getSField(thisDatasetColumn);\n\n\t\tif (doesInputStringMatch(comparisonValue, value)) {\n\t\t\tresult.push(section);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n// Takes queryParameters (values which correspond to the WHERE key in the given query json)\n// Returns sections that match the given query parameters\nexport function handleNegation(queryParams: any, sections: any, datasetId: string): InsightResult[] {\n\tconst result: InsightResult[] = [];\n\tconst resultsToExclude: InsightResult[] = handleWhere(queryParams, sections, datasetId);\n\n\tfor (const section of sections) {\n\t\tif (!resultsToExclude.includes(section)) {\n\t\t\tresult.push(section);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/* Takes\n\t\"COLUMNS\": [\n\t\t\"sections_dept\",\n\t\t\"sections_avg\"\n\t],\n\t\"ORDER\": \"sections_avg\"\n\n\tReturns array of InsightResult\n\t */\nexport function handleOptions(queryOptions: any, sections: any, datasetId: string): InsightResult[] {\n\t// If COLUMNS does not exist, throw InsightError\n\t// If COLUMNS is empty, throw InsightError\n\t// above is done in getDatasetId()\n\tlet columns: any;\n\tlet order: any = null;\n\tfor (const queryKey in queryOptions) {\n\t\tif (queryKey === \"COLUMNS\") {\n\t\t\tcolumns = queryOptions[queryKey];\n\t\t} else if (queryKey === \"ORDER\") {\n\t\t\torder = queryOptions[queryKey];\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid Query: invalid key in options\");\n\t\t}\n\t}\n\n\t// initialize empty array\n\tlet result: InsightResult[] = [];\n\n\tfor (const section of sections) {\n\t\tconst insightResult: InsightResult = {};\n\t\tfor (const datasetColumnPair of columns) {\n\t\t\tgetAndCheckDatasetId(datasetColumnPair, datasetId);\n\t\t\tconst columnName = getAndCheckColumnName(datasetColumnPair, QueryComparison.EITHER);\n\n\t\t\tif (isMField(columnName)) {\n\t\t\t\tinsightResult[datasetColumnPair] = section.getMField(columnName);\n\t\t\t} else if (isSField(columnName)) {\n\t\t\t\tinsightResult[datasetColumnPair] = section.getSField(columnName);\n\t\t\t}\n\t\t}\n\n\t\tresult.push(insightResult);\n\t}\n\n\t// sort by order\n\tif (order !== null) {\n\t\tif (!columns.includes(order)) {\n\t\t\tthrow new InsightError(\"Invalid Query: ORDER must be a column in COLUMNS\");\n\t\t}\n\t\tresult = sortByOrder(result, order);\n\t}\n\n\treturn result;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8aa05d3899096524519a458fead67e97e1978e95","contentHash":"57b4baec6beb371fa6936283b7da637e651ea5e1ce5337942f8c15184f025d49"},"/Users/justin/project_team052/src/utils/zipUtilsRoom.ts":{"path":"/Users/justin/project_team052/src/utils/zipUtilsRoom.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":88}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":64}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":34}},"8":{"start":{"line":11,"column":27},"end":{"line":11,"column":56}},"9":{"start":{"line":12,"column":20},"end":{"line":12,"column":57}},"10":{"start":{"line":14,"column":16},"end":{"line":14,"column":37}},"11":{"start":{"line":15,"column":20},"end":{"line":15,"column":68}},"12":{"start":{"line":16,"column":26},"end":{"line":16,"column":53}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":29}},"14":{"start":{"line":18,"column":22},"end":{"line":18,"column":53}},"15":{"start":{"line":19,"column":26},"end":{"line":19,"column":81}},"16":{"start":{"line":20,"column":35},"end":{"line":20,"column":83}},"17":{"start":{"line":21,"column":22},"end":{"line":21,"column":79}},"18":{"start":{"line":22,"column":22},"end":{"line":22,"column":24}},"19":{"start":{"line":23,"column":4},"end":{"line":27,"column":5}},"20":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"21":{"start":{"line":25,"column":12},"end":{"line":25,"column":33}},"22":{"start":{"line":28,"column":4},"end":{"line":28,"column":21}},"23":{"start":{"line":30,"column":0},"end":{"line":30,"column":52}},"24":{"start":{"line":32,"column":22},"end":{"line":32,"column":47}},"25":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"26":{"start":{"line":34,"column":8},"end":{"line":34,"column":76}},"27":{"start":{"line":36,"column":4},"end":{"line":42,"column":5}},"28":{"start":{"line":37,"column":33},"end":{"line":37,"column":64}},"29":{"start":{"line":38,"column":8},"end":{"line":38,"column":53}},"30":{"start":{"line":41,"column":8},"end":{"line":41,"column":85}},"31":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}},"32":{"start":{"line":46,"column":22},"end":{"line":46,"column":69}},"33":{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},"34":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"35":{"start":{"line":49,"column":12},"end":{"line":49,"column":25}},"36":{"start":{"line":52,"column":4},"end":{"line":52,"column":78}},"37":{"start":{"line":54,"column":0},"end":{"line":54,"column":44}},"38":{"start":{"line":56,"column":33},"end":{"line":64,"column":6}},"39":{"start":{"line":57,"column":21},"end":{"line":57,"column":46}},"40":{"start":{"line":58,"column":8},"end":{"line":62,"column":9}},"41":{"start":{"line":59,"column":32},"end":{"line":59,"column":58}},"42":{"start":{"line":60,"column":12},"end":{"line":60,"column":55}},"43":{"start":{"line":61,"column":12},"end":{"line":61,"column":22}},"44":{"start":{"line":63,"column":8},"end":{"line":63,"column":18}},"45":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"46":{"start":{"line":66,"column":8},"end":{"line":66,"column":85}},"47":{"start":{"line":68,"column":4},"end":{"line":68,"column":51}},"48":{"start":{"line":71,"column":29},"end":{"line":73,"column":6}},"49":{"start":{"line":72,"column":8},"end":{"line":72,"column":52}},"50":{"start":{"line":74,"column":4},"end":{"line":74,"column":47}},"51":{"start":{"line":77,"column":30},"end":{"line":77,"column":70}},"52":{"start":{"line":78,"column":23},"end":{"line":78,"column":106}},"53":{"start":{"line":79,"column":21},"end":{"line":79,"column":51}},"54":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"55":{"start":{"line":81,"column":8},"end":{"line":81,"column":105}},"56":{"start":{"line":83,"column":22},"end":{"line":83,"column":77}},"57":{"start":{"line":84,"column":22},"end":{"line":84,"column":24}},"58":{"start":{"line":85,"column":4},"end":{"line":88,"column":5}},"59":{"start":{"line":86,"column":24},"end":{"line":86,"column":241}},"60":{"start":{"line":87,"column":8},"end":{"line":87,"column":32}},"61":{"start":{"line":89,"column":4},"end":{"line":89,"column":21}},"62":{"start":{"line":92,"column":4},"end":{"line":108,"column":7}},"63":{"start":{"line":93,"column":8},"end":{"line":107,"column":11}},"64":{"start":{"line":94,"column":23},"end":{"line":94,"column":25}},"65":{"start":{"line":95,"column":12},"end":{"line":97,"column":15}},"66":{"start":{"line":96,"column":16},"end":{"line":96,"column":30}},"67":{"start":{"line":98,"column":12},"end":{"line":106,"column":15}},"68":{"start":{"line":99,"column":16},"end":{"line":105,"column":17}},"69":{"start":{"line":100,"column":37},"end":{"line":100,"column":53}},"70":{"start":{"line":101,"column":20},"end":{"line":101,"column":38}},"71":{"start":{"line":104,"column":20},"end":{"line":104,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"Base64ZipToJsonRooms","decl":{"start":{"line":13,"column":15},"end":{"line":13,"column":35}},"loc":{"start":{"line":13,"column":47},"end":{"line":29,"column":1}},"line":13},"2":{"name":"getIndexHtml","decl":{"start":{"line":31,"column":15},"end":{"line":31,"column":27}},"loc":{"start":{"line":31,"column":37},"end":{"line":43,"column":1}},"line":31},"3":{"name":"getBuildingTable","decl":{"start":{"line":45,"column":9},"end":{"line":45,"column":25}},"loc":{"start":{"line":45,"column":37},"end":{"line":53,"column":1}},"line":45},"4":{"name":"parseBuildingFiles","decl":{"start":{"line":55,"column":15},"end":{"line":55,"column":33}},"loc":{"start":{"line":55,"column":58},"end":{"line":69,"column":1}},"line":55},"5":{"name":"(anonymous_5)","decl":{"start":{"line":56,"column":51},"end":{"line":56,"column":52}},"loc":{"start":{"line":56,"column":65},"end":{"line":64,"column":5}},"line":56},"6":{"name":"buildingFileJsonToRoomsJson","decl":{"start":{"line":70,"column":15},"end":{"line":70,"column":42}},"loc":{"start":{"line":70,"column":58},"end":{"line":75,"column":1}},"line":70},"7":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":47},"end":{"line":71,"column":48}},"loc":{"start":{"line":71,"column":71},"end":{"line":73,"column":5}},"line":71},"8":{"name":"parseRoomsFromBuilding","decl":{"start":{"line":76,"column":15},"end":{"line":76,"column":37}},"loc":{"start":{"line":76,"column":52},"end":{"line":90,"column":1}},"line":76},"9":{"name":"fetchGeoData","decl":{"start":{"line":91,"column":15},"end":{"line":91,"column":27}},"loc":{"start":{"line":91,"column":33},"end":{"line":109,"column":1}},"line":91},"10":{"name":"(anonymous_10)","decl":{"start":{"line":92,"column":23},"end":{"line":92,"column":24}},"loc":{"start":{"line":92,"column":44},"end":{"line":108,"column":5}},"line":92},"11":{"name":"(anonymous_11)","decl":{"start":{"line":93,"column":37},"end":{"line":93,"column":38}},"loc":{"start":{"line":93,"column":46},"end":{"line":107,"column":9}},"line":93},"12":{"name":"(anonymous_12)","decl":{"start":{"line":95,"column":27},"end":{"line":95,"column":28}},"loc":{"start":{"line":95,"column":38},"end":{"line":97,"column":13}},"line":95},"13":{"name":"(anonymous_13)","decl":{"start":{"line":98,"column":26},"end":{"line":98,"column":27}},"loc":{"start":{"line":98,"column":32},"end":{"line":106,"column":13}},"line":98}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{"line":33,"column":4},"end":{"line":35,"column":5}}],"line":33},"4":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"5":{"loc":{"start":{"line":58,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":62,"column":9}},{"start":{"line":58,"column":8},"end":{"line":62,"column":9}}],"line":58},"6":{"loc":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},{"start":{"line":65,"column":4},"end":{"line":67,"column":5}}],"line":65},"7":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{"line":80,"column":4},"end":{"line":82,"column":5}}],"line":80}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":74,"21":364,"22":1,"23":1,"24":1,"25":1,"26":0,"27":1,"28":1,"29":1,"30":0,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":1,"38":1,"39":74,"40":74,"41":74,"42":74,"43":74,"44":0,"45":1,"46":0,"47":1,"48":1,"49":74,"50":1,"51":74,"52":74,"53":74,"54":74,"55":0,"56":74,"57":74,"58":74,"59":364,"60":364,"61":74,"62":74,"63":74,"64":74,"65":74,"66":74,"67":74,"68":74,"69":74,"70":74,"71":0},"f":{"0":2,"1":1,"2":1,"3":1,"4":1,"5":74,"6":1,"7":74,"8":74,"9":74,"10":74,"11":74,"12":74,"13":74},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,1],"4":[1,0],"5":[74,0],"6":[0,1],"7":[0,74]},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/utils/zipUtilsRoom.ts","sources":["/Users/justin/project_team052/src/utils/zipUtilsRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { Room } from \"../models/room\";\nimport JSZip from \"jszip\";\nimport { InsightError } from \"../controller/IInsightFacade\";\nimport { parse } from \"parse5\";\nimport { getAllTables, getBuildingTableData, getRoomsData, tableIsValid } from \"./htmlTableParsing\";\nimport http from \"node:http\";\n\ninterface BuildingData {\n\tcodeName: string;\n\tfullName: string;\n\taddress: string;\n\tfileLink: string;\n\tpage: any | null;\n}\n\n/*\n * Should take in a rooms dataset as a zipped directory of .htm files (see the campus.zip on the 310 website),\n * should validate all requirements to ensure that it is valid, then return a JSON representation of the rooms\n * (see Base64ZipToJsonSections in zipUtilsSection for an analogous function for sections)\n * - note that here we will have to use the Parse5 library's parse function, and look through the html structure*/\nexport async function Base64ZipToJsonRooms(b64string: string): Promise<any> {\n\tconst zip = new JSZip();\n\tconst zipData = await zip.loadAsync(b64string, { base64: true });\n\n\tconst indexHtmlJson = await getIndexHtml(zipData);\n\tindexHtmlJson.toString();\n\n\tconst buildings = getBuildingTable(indexHtmlJson);\n\n\tconst buildingsData: BuildingData[] = getBuildingTableData(buildings);\n\n\tconst buildingsDataWithFiles: BuildingData[] = await parseBuildingFiles(buildingsData, zipData);\n\n\tconst roomsJson = await buildingFileJsonToRoomsJson(buildingsDataWithFiles);\n\n\tconst roomArray: string | any[] = [];\n\tfor (const roomList of roomsJson) {\n\t\tfor (const room of roomList) {\n\t\t\troomArray.push(room);\n\t\t}\n\t}\n\n\treturn roomArray;\n}\n\nexport async function getIndexHtml(zipData: JSZip): Promise<any> {\n\tconst indexHtml = zipData.file(\"index.htm\");\n\tif (!indexHtml) {\n\t\tthrow new InsightError(\"No index.htm file found.\");\n\t}\n\ttry {\n\t\tconst indexHtmlContent = await indexHtml.async(\"string\");\n\t\treturn parse(indexHtmlContent);\n\t} catch (error) {\n\t\tthrow new InsightError(\"Error parsing Index.htm: \" + error);\n\t}\n}\n\nexport function getBuildingTable(indexJson: any): any[] {\n\tconst allTables = getAllTables(indexJson);\n\n\tfor (const table of allTables) {\n\t\tif (tableIsValid(table)) {\n\t\t\treturn table;\n\t\t}\n\t}\n\n\tthrow new InsightError(\"No valid building table found.\");\n}\n\nasync function parseBuildingFiles(buildingsData: BuildingData[], zipData: JSZip): Promise<any[]> {\n\tconst buildingFilePromises: Promise<any>[] = buildingsData.map(async (bd) => {\n\t\tconst file = zipData.file(bd.fileLink);\n\n\t\tif (file) {\n\t\t\tconst fileContent = await file.async(\"string\");\n\t\t\tbd.page = parse(fileContent);\n\t\t\treturn bd;\n\t\t}\n\t\treturn {};\n\t});\n\n\tif (buildingFilePromises.length === 0) {\n\t\tthrow new InsightError(\"No valid building files to parse.\");\n\t}\n\n\treturn await Promise.all(buildingFilePromises);\n}\n\nasync function buildingFileJsonToRoomsJson(buildingsData: BuildingData[]): Promise<any[]> {\n\tconst roomJsonPromises: Promise<any>[] = buildingsData.map(async (buildingData) => {\n\t\treturn parseRoomsFromBuilding(buildingData);\n\t});\n\n\treturn await Promise.all(roomJsonPromises);\n}\n\nasync function parseRoomsFromBuilding(buildingData: BuildingData): Promise<any> {\n\tconst URIEncodedAddress = encodeURIComponent(buildingData.address);\n\tconst apiCallUrl = \"http://cs310.students.cs.ubc.ca:11316/api/v1/project_team052/\" + URIEncodedAddress;\n\tconst response: any = await fetchGeoData(apiCallUrl);\n\n\tif (response.error) {\n\t\tthrow new InsightError(\"Failed to fetch geo data for: \" + buildingData.address);\n\t}\n\n\tconst roomsData = getRoomsData(buildingData.page);\n\n\tconst roomsJson = [];\n\tfor (const room of roomsData) {\n\t\tconst roomObj = new Room(\n\t\t\tbuildingData.fullName,\n\t\t\tbuildingData.codeName,\n\t\t\troom.number,\n\t\t\tbuildingData.codeName + \"_\" + room.number,\n\t\t\tbuildingData.address,\n\t\t\tresponse.lat,\n\t\t\tresponse.lon,\n\t\t\troom.seats,\n\t\t\troom.type,\n\t\t\troom.furniture,\n\t\t\troom.href\n\t\t);\n\t\troomsJson.push(roomObj);\n\t}\n\treturn roomsJson;\n}\n\nasync function fetchGeoData(url: string): Promise<any> {\n\treturn new Promise((resolve, reject) => {\n\t\thttp.get(url, (res) => {\n\t\t\tlet data = \"\";\n\n\t\t\tres.on(\"data\", (chunk) => {\n\t\t\t\tdata += chunk;\n\t\t\t});\n\n\t\t\tres.on(\"end\", () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst jsonData = JSON.parse(data);\n\t\t\t\t\tresolve(jsonData);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ccbc4c40188518367bdb2bf70d8f246e77b2ba59","contentHash":"4afc6355f6c9fb05709e12442cd42e8d73518834f74f81914429669f863823fe"},"/Users/justin/project_team052/src/utils/htmlTableParsing.ts":{"path":"/Users/justin/project_team052/src/utils/htmlTableParsing.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":107}},"2":{"start":{"line":5,"column":17},"end":{"line":5,"column":19}},"3":{"start":{"line":6,"column":4},"end":{"line":10,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"5":{"start":{"line":8,"column":12},"end":{"line":8,"column":57}},"6":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":26}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":18}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}},"10":{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},"11":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":26}},"13":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}},"15":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"16":{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":23}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":18}},"19":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"20":{"start":{"line":35,"column":8},"end":{"line":35,"column":21}},"21":{"start":{"line":38,"column":4},"end":{"line":43,"column":5}},"22":{"start":{"line":39,"column":8},"end":{"line":42,"column":9}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":23}},"24":{"start":{"line":41,"column":12},"end":{"line":41,"column":18}},"25":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"26":{"start":{"line":45,"column":8},"end":{"line":45,"column":21}},"27":{"start":{"line":47,"column":4},"end":{"line":47,"column":48}},"28":{"start":{"line":49,"column":0},"end":{"line":49,"column":36}},"29":{"start":{"line":51,"column":4},"end":{"line":51,"column":43}},"30":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"31":{"start":{"line":56,"column":8},"end":{"line":59,"column":9}},"32":{"start":{"line":57,"column":12},"end":{"line":57,"column":30}},"33":{"start":{"line":58,"column":12},"end":{"line":58,"column":18}},"34":{"start":{"line":61,"column":22},"end":{"line":63,"column":6}},"35":{"start":{"line":62,"column":8},"end":{"line":62,"column":37}},"36":{"start":{"line":64,"column":26},"end":{"line":64,"column":28}},"37":{"start":{"line":65,"column":4},"end":{"line":68,"column":5}},"38":{"start":{"line":66,"column":29},"end":{"line":66,"column":56}},"39":{"start":{"line":67,"column":8},"end":{"line":67,"column":41}},"40":{"start":{"line":69,"column":4},"end":{"line":69,"column":25}},"41":{"start":{"line":71,"column":0},"end":{"line":71,"column":52}},"42":{"start":{"line":73,"column":20},"end":{"line":75,"column":6}},"43":{"start":{"line":74,"column":8},"end":{"line":74,"column":39}},"44":{"start":{"line":76,"column":29},"end":{"line":76,"column":84}},"45":{"start":{"line":77,"column":22},"end":{"line":77,"column":23}},"46":{"start":{"line":78,"column":29},"end":{"line":78,"column":81}},"47":{"start":{"line":79,"column":25},"end":{"line":79,"column":26}},"48":{"start":{"line":80,"column":28},"end":{"line":80,"column":94}},"49":{"start":{"line":81,"column":22},"end":{"line":81,"column":23}},"50":{"start":{"line":82,"column":21},"end":{"line":82,"column":86}},"51":{"start":{"line":83,"column":4},"end":{"line":89,"column":6}},"52":{"start":{"line":92,"column":23},"end":{"line":92,"column":50}},"53":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"54":{"start":{"line":94,"column":8},"end":{"line":94,"column":18}},"55":{"start":{"line":96,"column":22},"end":{"line":96,"column":35}},"56":{"start":{"line":98,"column":4},"end":{"line":103,"column":5}},"57":{"start":{"line":99,"column":8},"end":{"line":102,"column":9}},"58":{"start":{"line":100,"column":12},"end":{"line":100,"column":30}},"59":{"start":{"line":101,"column":12},"end":{"line":101,"column":18}},"60":{"start":{"line":104,"column":22},"end":{"line":106,"column":6}},"61":{"start":{"line":105,"column":8},"end":{"line":105,"column":37}},"62":{"start":{"line":107,"column":22},"end":{"line":107,"column":24}},"63":{"start":{"line":108,"column":4},"end":{"line":111,"column":5}},"64":{"start":{"line":109,"column":25},"end":{"line":109,"column":48}},"65":{"start":{"line":110,"column":8},"end":{"line":110,"column":33}},"66":{"start":{"line":112,"column":4},"end":{"line":112,"column":21}},"67":{"start":{"line":114,"column":0},"end":{"line":114,"column":36}},"68":{"start":{"line":116,"column":23},"end":{"line":116,"column":25}},"69":{"start":{"line":117,"column":19},"end":{"line":117,"column":45}},"70":{"start":{"line":118,"column":4},"end":{"line":122,"column":5}},"71":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"72":{"start":{"line":120,"column":12},"end":{"line":120,"column":35}},"73":{"start":{"line":123,"column":4},"end":{"line":123,"column":22}},"74":{"start":{"line":126,"column":20},"end":{"line":128,"column":6}},"75":{"start":{"line":127,"column":8},"end":{"line":127,"column":39}},"76":{"start":{"line":129,"column":23},"end":{"line":129,"column":67}},"77":{"start":{"line":130,"column":21},"end":{"line":130,"column":84}},"78":{"start":{"line":131,"column":27},"end":{"line":131,"column":28}},"79":{"start":{"line":132,"column":22},"end":{"line":132,"column":90}},"80":{"start":{"line":133,"column":22},"end":{"line":133,"column":23}},"81":{"start":{"line":134,"column":21},"end":{"line":134,"column":84}},"82":{"start":{"line":135,"column":22},"end":{"line":135,"column":23}},"83":{"start":{"line":136,"column":17},"end":{"line":136,"column":64}},"84":{"start":{"line":137,"column":4},"end":{"line":143,"column":6}}},"fnMap":{"0":{"name":"getAllTables","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":28},"end":{"line":15,"column":1}},"line":4},"1":{"name":"tableIsValid","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":21}},"loc":{"start":{"line":17,"column":29},"end":{"line":48,"column":1}},"line":17},"2":{"name":"checkTableClasses","decl":{"start":{"line":50,"column":9},"end":{"line":50,"column":26}},"loc":{"start":{"line":50,"column":36},"end":{"line":52,"column":1}},"line":50},"3":{"name":"getBuildingTableData","decl":{"start":{"line":53,"column":9},"end":{"line":53,"column":29}},"loc":{"start":{"line":53,"column":46},"end":{"line":70,"column":1}},"line":53},"4":{"name":"(anonymous_4)","decl":{"start":{"line":61,"column":46},"end":{"line":61,"column":47}},"loc":{"start":{"line":61,"column":55},"end":{"line":63,"column":5}},"line":61},"5":{"name":"getBuildingInfoFromRow","decl":{"start":{"line":72,"column":9},"end":{"line":72,"column":31}},"loc":{"start":{"line":72,"column":37},"end":{"line":90,"column":1}},"line":72},"6":{"name":"(anonymous_6)","decl":{"start":{"line":73,"column":42},"end":{"line":73,"column":43}},"loc":{"start":{"line":73,"column":53},"end":{"line":75,"column":5}},"line":73},"7":{"name":"getRoomsData","decl":{"start":{"line":91,"column":9},"end":{"line":91,"column":21}},"loc":{"start":{"line":91,"column":36},"end":{"line":113,"column":1}},"line":91},"8":{"name":"(anonymous_8)","decl":{"start":{"line":104,"column":46},"end":{"line":104,"column":47}},"loc":{"start":{"line":104,"column":55},"end":{"line":106,"column":5}},"line":104},"9":{"name":"getRoomTables","decl":{"start":{"line":115,"column":9},"end":{"line":115,"column":22}},"loc":{"start":{"line":115,"column":37},"end":{"line":124,"column":1}},"line":115},"10":{"name":"getRoomInfoFromRow","decl":{"start":{"line":125,"column":9},"end":{"line":125,"column":27}},"loc":{"start":{"line":125,"column":33},"end":{"line":144,"column":1}},"line":125},"11":{"name":"(anonymous_11)","decl":{"start":{"line":126,"column":42},"end":{"line":126,"column":43}},"loc":{"start":{"line":126,"column":53},"end":{"line":128,"column":5}},"line":126}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":10,"column":5}},{"start":{"line":6,"column":4},"end":{"line":10,"column":5}}],"line":6},"1":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{"line":11,"column":4},"end":{"line":13,"column":5}}],"line":11},"2":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"3":{"loc":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},{"start":{"line":24,"column":4},"end":{"line":26,"column":5}}],"line":24},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},{"start":{"line":29,"column":8},"end":{"line":32,"column":9}}],"line":29},"5":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{"line":34,"column":4},"end":{"line":36,"column":5}}],"line":34},"6":{"loc":{"start":{"line":39,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":42,"column":9}},{"start":{"line":39,"column":8},"end":{"line":42,"column":9}}],"line":39},"7":{"loc":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},{"start":{"line":44,"column":4},"end":{"line":46,"column":5}}],"line":44},"8":{"loc":{"start":{"line":56,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":59,"column":9}},{"start":{"line":56,"column":8},"end":{"line":59,"column":9}}],"line":56},"9":{"loc":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},{"start":{"line":93,"column":4},"end":{"line":95,"column":5}}],"line":93},"10":{"loc":{"start":{"line":99,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":102,"column":9}},{"start":{"line":99,"column":8},"end":{"line":102,"column":9}}],"line":99},"11":{"loc":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},{"start":{"line":119,"column":8},"end":{"line":121,"column":9}}],"line":119}},"s":{"0":1,"1":1,"2":142949,"3":142949,"4":72074,"5":142874,"6":142949,"7":45,"8":142949,"9":1,"10":45,"11":225,"12":45,"13":45,"14":0,"15":45,"16":90,"17":45,"18":45,"19":45,"20":0,"21":45,"22":90,"23":45,"24":45,"25":45,"26":0,"27":45,"28":1,"29":45,"30":1,"31":4,"32":1,"33":1,"34":1,"35":149,"36":1,"37":1,"38":74,"39":74,"40":1,"41":1,"42":74,"43":814,"44":74,"45":74,"46":74,"47":74,"48":74,"49":74,"50":74,"51":74,"52":74,"53":74,"54":30,"55":44,"56":44,"57":176,"58":44,"59":44,"60":44,"61":772,"62":44,"63":44,"64":364,"65":364,"66":44,"67":1,"68":74,"69":74,"70":74,"71":44,"72":44,"73":74,"74":364,"75":4004,"76":364,"77":364,"78":364,"79":364,"80":364,"81":364,"82":364,"83":364,"84":364},"f":{"0":142949,"1":45,"2":45,"3":1,"4":149,"5":74,"6":814,"7":74,"8":772,"9":74,"10":364,"11":4004},"b":{"0":[72074,70875],"1":[45,142904],"2":[45,180],"3":[0,45],"4":[45,45],"5":[0,45],"6":[45,45],"7":[0,45],"8":[1,3],"9":[30,44],"10":[44,132],"11":[44,0]},"inputSourceMap":{"version":3,"file":"/Users/justin/project_team052/src/utils/htmlTableParsing.ts","sources":["/Users/justin/project_team052/src/utils/htmlTableParsing.ts"],"names":[],"mappings":"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","sourcesContent":["interface BuildingData {\n\tcodeName: string;\n\tfullName: string;\n\taddress: string;\n\tfileLink: string;\n\tpage: any | null;\n}\n\ninterface RoomData {\n\tnumber: string;\n\tseats: number;\n\tfurniture: string;\n\ttype: string;\n\thref: string;\n}\n\nexport function getAllTables(node: any): any[] {\n\tlet tables: any[] = [];\n\n\tif (node.childNodes) {\n\t\tfor (const child of node.childNodes) {\n\t\t\ttables = [...tables, ...getAllTables(child)];\n\t\t}\n\t}\n\n\tif (node.nodeName === \"table\") {\n\t\ttables.push(node);\n\t}\n\n\treturn tables;\n}\n\nexport function tableIsValid(table: any): boolean {\n\tlet tbody: any;\n\tfor (const child of table.childNodes) {\n\t\tif (child.nodeName === \"tbody\") {\n\t\t\ttbody = child;\n\t\t}\n\t}\n\tif (!tbody) {\n\t\treturn false;\n\t}\n\n\tlet tr: any;\n\tfor (const child of tbody.childNodes) {\n\t\tif (child.nodeName === \"tr\") {\n\t\t\ttr = child;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!tr) {\n\t\treturn false;\n\t}\n\tlet td: any;\n\tfor (const child of tr.childNodes) {\n\t\tif (child.nodeName === \"td\") {\n\t\t\ttd = child;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!td) {\n\t\treturn false;\n\t}\n\n\treturn checkTableClasses(td.attrs[0].value);\n}\n\nfunction checkTableClasses(classes: string): boolean {\n\treturn classes.includes(\"views-field\");\n}\n\nexport function getBuildingTableData(buildingsTable: any): BuildingData[] {\n\tlet tbody: any;\n\tfor (const childNode of buildingsTable.childNodes) {\n\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\ttbody = childNode;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst tableRows = tbody.childNodes.filter((row: any) => {\n\t\treturn row.nodeName === \"tr\";\n\t});\n\tconst buildingsData: BuildingData[] = [];\n\tfor (const row of tableRows) {\n\t\tconst buildingData: BuildingData = getBuildingInfoFromRow(row);\n\t\tbuildingsData.push(buildingData);\n\t}\n\treturn buildingsData;\n}\n\nfunction getBuildingInfoFromRow(row: any): BuildingData {\n\tconst rowData = row.childNodes.filter((child: any) => {\n\t\treturn child.nodeName === \"td\";\n\t});\n\tconst buildingCodeName = rowData[1].childNodes[0].value.replace(\"\\n\", \"\").trim();\n\tconst nameIndex = 2;\n\tconst buildingFullName = rowData[nameIndex].childNodes[1].childNodes[0].value;\n\tconst addressIndex = 3;\n\tconst buildingAddress = rowData[addressIndex].childNodes[0].value.replace(\"\\n\", \"\").trim();\n\tconst linkIndex = 4;\n\tconst fileLink: string = rowData[linkIndex].childNodes[1].attrs[0].value.replace(\"./\", \"\");\n\n\treturn {\n\t\tcodeName: buildingCodeName,\n\t\tfullName: buildingFullName,\n\t\taddress: buildingAddress,\n\t\tfileLink: fileLink,\n\t\tpage: null,\n\t};\n}\n\nexport function getRoomsData(buildingPage: any): any[] {\n\tconst roomTables = getRoomTables(buildingPage);\n\tif (roomTables.length === 0) {\n\t\treturn [];\n\t}\n\tconst roomTable = roomTables[0];\n\n\tlet tbody: any;\n\tfor (const childNode of roomTable.childNodes) {\n\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\ttbody = childNode;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst tableRows = tbody.childNodes.filter((row: any) => {\n\t\treturn row.nodeName === \"tr\";\n\t});\n\n\tconst roomsData: RoomData[] = [];\n\tfor (const row of tableRows) {\n\t\tconst roomData: RoomData = getRoomInfoFromRow(row);\n\t\troomsData.push(roomData);\n\t}\n\treturn roomsData;\n}\n\nfunction getRoomTables(buildingJson: any): any[] {\n\tconst roomTables: any[] = [];\n\tconst tables = getAllTables(buildingJson);\n\tfor (const table of tables) {\n\t\tif (tableIsValid(table)) {\n\t\t\troomTables.push(table);\n\t\t}\n\t}\n\treturn roomTables;\n}\n\nfunction getRoomInfoFromRow(row: any): RoomData {\n\tconst rowData = row.childNodes.filter((child: any) => {\n\t\treturn child.nodeName === \"td\";\n\t});\n\n\tconst roomNumber = rowData[0].childNodes[1].childNodes[0].value;\n\tconst numSeats = Number(rowData[1].childNodes[0].value.replace(\"\\n\", \"\").trim());\n\tconst furnitureIndex = 2;\n\tconst furniture = rowData[furnitureIndex].childNodes[0].value.replace(\"\\n\", \"\").trim();\n\tconst typeIndex = 3;\n\tconst roomType: string = rowData[typeIndex].childNodes[0].value.replace(\"\\n\", \"\").trim();\n\tconst hrefIndex = 4;\n\tconst href: string = rowData[hrefIndex].childNodes[1].attrs[0].value;\n\n\treturn {\n\t\tnumber: roomNumber,\n\t\tseats: numSeats,\n\t\tfurniture: furniture,\n\t\ttype: roomType,\n\t\thref: href,\n\t};\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e345380d42b9a3a8c3ebbefe7984c55aefa63db4","contentHash":"9ed63f90aaeed2a485315171cd086111478332e71d251385897a059efa1c1da4"}}